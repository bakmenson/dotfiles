#+title: Dotfiles

#+property: header-args :mkdirp yes
#+property: header-args:shell :tangle-mode (identity #o555)
#+property: header-args:conf :tangle-mode (identity #o555)

* Table of Contents :toc_1:
- [[#i3][i3]]
- [[#sway][Sway]]
- [[#hyprland][Hyprland]]
- [[#bspwm][Bspwm]]
- [[#qtile][Qtile]]
- [[#waybar][Waybar]]
- [[#polybar][Polybar]]
- [[#picom][Picom]]
- [[#mpv][Mpv]]
- [[#zsh][Zsh]]
- [[#fish][Fish]]
- [[#rofi][Rofi]]
- [[#terminal][Terminal]]
- [[#ideavimrc][Ideavimrc]]
- [[#git][Git]]
- [[#xinitrc][xinitrc]]
- [[#dunst][Dunst]]
- [[#firefox][Firefox]]
- [[#scripts][Scripts]]

* i3
** Variables

#+begin_src conf :tangle ~/.config/i3/config
# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4
set $alt Mod1

set $terminal /home/solus/.cargo/bin/alacritty
#+end_src

** Desktop Layout

#+begin_src conf :tangle ~/.config/i3/config
# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>
#+end_src

** Fonts

#+begin_src conf :tangle ~/.config/i3/config
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font xft:URWGothic-Book 11
font xft:URWGothic-Book 0
#+end_src

** Mouse

#+begin_src conf :tangle ~/.config/i3/config
# Use Mouse+$mod to drag floating windows
floating_modifier $mod
#+end_src

** Borders

#+begin_src conf :tangle ~/.config/i3/config
# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 2
default_floating_border pixel 2

# Hide borders
hide_edge_borders none
# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 2
# bindsym $mod+n border normal

# border_radius 10
#+end_src

** Windows
*** Kill focused

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+q kill
#+end_src

*** Change focus

#+begin_src  conf :tangle ~/.config/i3/config
# focus_follows_mouse no

# bindsym $mod+j focus left
bindsym $alt+h focus left
bindsym $alt+l focus right
bindsym $alt+j focus down
bindsym $alt+k focus up
# bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent
#+end_src

*** Move focused

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+end_src

*** Workspace back and forth

#+begin_src  conf :tangle ~/.config/i3/config
workspace_auto_back_and_forth yes
bindsym $alt+Tab workspace back_and_forth
# bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth
#+end_src

*** Split orientation

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+h split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $alt+q split toggle
#+end_src

*** Toggle fullscreen mode

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+f fullscreen toggle
#+end_src

*** Change container layout

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
#+end_src

*** Toggle tiling / floating

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+Shift+space floating toggle
#+end_src

*** Toggle sticky

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+Shift+s sticky toggle
#+end_src

*** Scratchpad

#+begin_src  conf :tangle ~/.config/i3/config
# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#+end_src

*** Resize window

#+begin_src conf :tangle ~/.config/i3/config
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym j resize shrink height 5 px or 5 ppt
        bindsym semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# Lock screen
# bindsym $mod+9 exec --no-startup-id blurlock
# bindsym $mod+9 exec --no-startup-id gllock
#+end_src

** Workspaces
*** output

#+begin_src  conf :tangle ~/.config/i3/config
workspace 1 output HDMI-A-0
workspace 2 output HDMI-A-0
workspace 3 output HDMI-A-0
workspace 4 output HDMI-A-0
workspace 5 output HDMI-A-0
workspace 6 output HDMI-A-0
workspace 7 output HDMI-A-0
workspace 8 output HDMI-A-0
#+end_src

*** names

#+begin_src  conf :tangle ~/.config/i3/config
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
#+end_src

*** navigate

#+begin_src conf :tangle ~/.config/i3/config
bindsym $alt+n workspace next
bindsym $alt+p workspace prev

# alternatively navigate workspaces next / previous
#bindsym $alt+Right workspace next
#bindsym $alt+Left workspace prev
#+end_src

*** switch

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
#+end_src

*** Move focused container to workspace

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
#+end_src

*** Move to workspace with focused container

#+begin_src  conf :tangle ~/.config/i3/config
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
#+end_src

*** Switch to workspace with urgent window automatically

#+begin_src conf :tangle ~/.config/i3/config
for_window [urgent=latest] focus
#+end_src

** Terminal

#+begin_src conf :tangle ~/.config/i3/config
# start a terminal
#bindsym $alt+o exec xfce4-terminal
#bindsym $alt+o exec alacritty
#bindsym $alt+o exec kitty
bindsym $alt+o exec $terminal
#+end_src

** Program launcher

#+begin_src conf :tangle ~/.config/i3/config
# bindsym $mod+d exec --no-startup-id dmenu_recency
bindsym $mod+d exec rofi -show drun -modi drun -display-drun "Run"
#+end_src

** Start Apps

:TODO: fix screenshot with selection region

#+begin_src conf :tangle ~/.config/i3/config
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"
bindsym $mod+Shift+h exec xdg-open /usr/share/doc/manjaro/i3_help.pdf
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# pycharm
#bindsym $alt+p exec ~/pycharm-community/bin/pycharm.sh

# idea
bindsym $alt+i exec --no-startup-id ~/idea/bin/idea.sh

# Screenshot fullscreen
bindsym $mod+Shift+F10 exec --no-startup-id scrot -e "mv $f ~/Pictures"
# Select region for screenshot
bindsym $mod+F10 exec --no-startup-id scrot -s -e "mv $f ~/Pictures"
# Screenshot active window
bindsym $mod+Shift+F12 exec --no-startup-id scrot -u -e "mv $f ~/Pictures"

bindsym $alt+e exec --no-startup-id exec emacsclient -c -n -a "" -e "(bk/switch-to-dashboard)"

# bindsym $alt+f exec --no-startup-id feh -z -F /run/media/solus/hdd/Pictures/wallpapers/*

bindsym $alt+f exec dunstctl close

bindsym $alt+c exec copyq toggle

bindsym $mod+Shift+t exec --no-startup-id sh -c '$HOME/.tor-browser/Browser/start-tor-browser' --detach

bindsym $mod+Shift+b exec "bluetoothctl disconnect C7:2F:B7:16:A5:57; bluetoothctl connect C7:2F:B7:16:A5:57"
#+end_src

** i3

#+begin_src conf :tangle ~/.config/i3/config
# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    # bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
#+end_src

** Audio controls

#+begin_src conf :tangle ~/.config/i3/config
# Pulse Audio controls
#bindsym $mod+F3 exec --no-startup-id pactl set-sink-volume 0 +2%
#bindsym $mod+F2 exec --no-startup-id pactl set-sink-volume 0 -2%
#bindsym $mod+F4 exec --no-startup-id pactl set-sink-mute 0 toggle

# bindsym $mod+F2 exec --no-startup-id "amixer -q set Master 2%- unmute"
# bindsym $mod+F3 exec --no-startup-id "amixer -q set Master 2%+ unmute"
# bindsym $mod+F4 exec --no-startup-id "amixer -q set Master toggle"
bindsym $mod+F2 exec --no-startup-id "amixer -D pulse sset Master 2%-"
bindsym $mod+F3 exec --no-startup-id "amixer -D pulse sset Master 2%+"
bindsym $mod+F4 exec --no-startup-id "amixer -D pulse sset Master toogle"

# Switch between speakers and headphones
# bindsym $mod+F5 exec --no-startup-id "amixer -c 0 set 'Auto-Mute Mode' Disabled"
# bindsym $mod+F6 exec --no-startup-id "amixer -c 0 set 'Auto-Mute Mode' Enabled"

#bindsym XF86AudioRaiseVolume exec --no-startup-id "amixer -q set Master 3%+ unmute"
#bindsym XF86AudioLowerVolume exec --no-startup-id "amixer -q set Master 3%- unmute"
#bindsym XF86AudioMute exec --no-startup-id "amixer -q set Master toggle"
#+end_src

** for_window

#+begin_src conf :tangle ~/.config/i3/config
for_window [class="^.*"] border pixel 2
for_window [class="GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Transmission-gtk"] floating enable border pixel 1
for_window [class="mpv"] floating enable, resize set 1200 800, move position center
for_window [class="ffplay"] floating enable, resize set 1200 800, move position center
for_window [class="Tor"] floating enable, resize set 1600 1020, move position center
# for_window [class="TelegramDesktop"] floating enable, resize set 930 1020, move position center
for_window [class="Alacritty"] floating enable, resize set 1200 800, move position center
for_window [class="copyq"] floating enable, resize set 1025 1026, move position center
#+end_src

** Autostart applications

#+begin_src conf :tangle ~/.config/i3/config
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec --no-startup-id xfce4-power-manager

exec --no-startup-id xrandr --output HDMI-A-0 --primary --mode 1920x1080 --rotate normal --output eDP --off

exec --no-startup-id "sleep 3; setxkbmap -option caps:swapescape -layout us,ru -variant -option grp:alt_shift_toggle,grp_led:scroll"
exec --no-startup-id picom --config ~/.config/picom.conf
# --bg-fill, --bg-scale
# exec_always feh --randomize --bg-fill /run/media/solus/hdd/Pictures/wallpapers/*
exec_always feh --randomize --bg-fill /home/solus/Pictures/wallpapers/*
exec_always --no-startup-id $HOME/.config/polybar/polybar.sh
exec --no-startup-id unclutter
exec --no-startup-id dunst -conf ~/.config/dunst/dunstrc
exec --no-startup-id emacs --fg-daemon
exec --no-startup-id copyq
exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet

# exec --no-startup-id python3 ~/.squats.py

exec --no-startup-id "sleep 18; i3-msg 'workspace 2; exec emacsclient -c -n -a \"\"'"
exec --no-startup-id "sleep 16; i3-msg 'workspace 1; exec emacsclient -c -n -a \"\"'"
# exec --no-startup-id "sleep 15; i3-msg 'workspace 3; exec ~/idea/bin/idea.sh'"
# exec --no-startup-id "sleep 15; i3-msg 'workspace 3; exec idea'"
exec --no-startup-id "sleep 12; i3-msg 'workspace 3; exec chromium'"
exec --no-startup-id "sleep 2; i3-msg 'workspace 4; exec firefox'"
exec --no-startup-id "sleep 7; i3-msg 'workspace 5; exec telegram-desktop'"
# exec --no-startup-id exec telegram-desktop -startintray
# exec --no-startup-id exec transmission-gtk -m
#exec --no-startup-id "sleep 15; i3-msg 'workspace 6; exec virtualbox'"
#exec --no-startup-id "sleep 20; i3-msg 'workspace 2; exec pycharm-community'"
#exec --no-startup-id "sleep 12; i3-msg 'workspace 2; exec ~/pycharm/bin/pycharm.sh'"
#exec --no-startup-id "sleep 50; i3-msg 'workspace 3; exec intellij-idea-community'"
#exec --no-startup-id "sleep 1; i3-msg 'workspace 2; exec emacsclient -c -a emacs'"
#exec --no-startup-id "sleep 1; i3-msg 'workspace 1; exec kitty'"
#exec --no-startup-id "sleep 1; i3-msg 'workspace 1; exec xfce4-terminal'"
#exec --no-startup-id "sleep 1; i3-msg 'workspace 1; exec xfce4-terminal -e vifm'"
#exec --no-startup-id "sleep 7; i3-msg 'workspace 4; exec qutebrowser'"
#exec --no-startup-id "sleep 3; i3-msg 'workspace 2; exec alacritty'"
#exec --no-startup-id "sleep 1; i3-msg 'workspace 1; exec alacritty -e ranger'"
#exec --no-startup-id "sleep 3; i3-msg 'workspace 2; exec alacritty -e ~/nvim.appimage'"
# exec --no-startup-id "sleep 12; i3-msg 'workspace 1; exec alacritty -e nnn -S'"
#exec --no-startup-id "sleep 1; i3-msg 'workspace 4; exec google-chrome'"
#exec --no-startup-id "sleep 12; i3-msg 'workspace 5; exec telegram-desktop'"
#+end_src

** Theme colors

#+begin_src conf :tangle ~/.config/i3/config
# class                   border  backgr. text    indic.   child_border
  client.focused          #556064 #556064 #80FFF9 #FDF6E3
  client.focused_inactive #2F3D44 #2F3D44 #1ABC9C #454948
  client.unfocused        #282c34 #282c34 #1ABC9C #454948
  client.urgent           #CB4B16 #FDF6E3 #1ABC9C #268BD2
  client.placeholder      #000000 #0c0c0c #ffffff #000000

  client.background       #2B2C2B
#+end_src

** Gaps

#+begin_src conf :tangle ~/.config/i3/config
# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
#+end_src

* Sway
** Variables

#+begin_src conf :tangle ~/.config/sway/config
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term alacritty
set $term /home/solus/.cargo/bin/alacritty
# set $term emacsclient -c -n -e "(multi-vterm)"
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | wofi --show drun | xargs swaymsg exec --
#set $menu dmenu_path | wofi --show drun -I | xargs swaymsg exec --
#+end_src

** Output configuration

#+begin_src conf :tangle ~/.config/sway/config
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg `find /run/media/solus/hdd/Pictures/wallpapers -type f | shuf -n 1` fill
# output * bg /run/media/solus/hdd/Pictures/wallpapers/27.jpg fill
output * bg `find /home/solus/Pictures/wallpapers -type f | shuf -n 1` fill

#
# Example configuration:
#
output HDMI-A-1 resolution 1920x1080 position 1920,0
output eDP-1 disable
#+end_src

** Idle

#+begin_src conf :tangle ~/.config/sway/config
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#+end_src

** Input configuration

#+begin_src conf :tangle ~/.config/sway/config
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
    xkb_layout us,ru
    xkb_options grp:alt_shift_toggle,grp_led:scroll,caps:swapescape
}
#+end_src

** Key bindings
*** Basics

#+begin_src conf :tangle ~/.config/sway/config
# Start a terminal
bindsym $alt+o exec $term

# Kill focused window
bindsym $mod+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#+end_src

*** Moving around

#+begin_src conf :tangle ~/.config/sway/config
# Move your focus around
bindsym $alt+$left focus left
bindsym $alt+$down focus down
bindsym $alt+$up focus up
bindsym $alt+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
#+end_src

*** Workspaces

#+begin_src conf :tangle ~/.config/sway/config
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#navigate workspaces next / previous
bindsym $alt+n workspace next
bindsym $alt+p workspace prev

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $alt+Tab workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth
#+end_src

*** Layout stuff

#+begin_src conf :tangle ~/.config/sway/config
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
# bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+space floating toggle; resize set 1900 1035; move position center

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#+end_src

*** Scratchpad

#+begin_src conf :tangle ~/.config/sway/config
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#+end_src

*** Resizing containers

#+begin_src conf :tangle ~/.config/sway/config
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#+end_src

*** Audio controls

#+begin_src conf :tangle ~/.config/sway/config
# bindsym $mod+F2 exec --no-startup-id pactl set-sink-volume 0 -2%
# bindsym $mod+F3 exec --no-startup-id pactl set-sink-volume 0 +2%
# bindsym $mod+F4 exec --no-startup-id pactl set-sink-mute 0 toggle
bindsym $mod+F2 exec --no-startup-id "amixer -q set Master 3%- unmute"
bindsym $mod+F3 exec --no-startup-id "amixer -q set Master 3%+ unmute"
bindsym $mod+F4 exec --no-startup-id "amixer -q set Master toggle"
#+end_src

*** Launch apps 

#+begin_src conf :tangle ~/.config/sway/config
# Emacs
bindsym $alt+e exec --no-startup-id emacsclient -c -n

# Slide show in fullscreen instead of lock screen
bindsym $alt+f exec --no-startup-id imv -f -t 10 /run/media/solus/hdd/Pictures/wallpapers

# IDEA
bindsym $alt+i exec --no-startup-id ~/idea/bin/idea.sh

# --to-code for for in cyrillic layout
bindsym --to-code $alt+c exec --no-startup-id copyq toggle

bindsym $mod+Shift+t exec --no-startup-id sh -c '$HOME/.tor-browser/Browser/start-tor-browser' --detach
#+end_src

*** Take screenshots

#+begin_src conf :tangle ~/.config/sway/config
# Whole screen
bindsym $mod+F12 exec grim

# Current window
bindsym $mod+Shift+F12 exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')"

# Part of the screen:
bindsym $mod+F11 exec grim -g "$(slurp)"
#+end_src

*** Set shut down, restart and suspend features

#+begin_src conf :tangle ~/.config/sway/config
set $mode_system System (s) suspend, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
  }
bindsym $mod+0 mode "$mode_system"
#+end_src

** Status Bar:

#+begin_src conf :tangle ~/.config/sway/config
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}
#+end_src

** Gaps

#+begin_src conf :tangle ~/.config/sway/config
gaps inner 10
gaps outer 4
smart_gaps on
#+end_src

** Borders

#+begin_src conf :tangle ~/.config/sway/config
default_border pixel
smart_borders on
# hide_edge_borders none
#for_window [tiling] border pixel
#+end_src

** For_Window

#+begin_src conf :tangle ~/.config/sway/config
# for_window [app_id="transmission-gtk"] floating enable, resize set 1200 800, move position center
# for_window [app_id="mpv"] floating enable, resize set 1200 800, move position center
# for_window [class="ffplay"] floating enable, resize set 1200 800, move position center
# # for_window [class="Emacs"] floating enable, resize set 1200 800, move position center
# # for_window [app_id="telegram-desktop_telegram-desktop"] floating enable, resize set 930 1020
# for_window [app_id="Alacritty"] floating enable, resize set 1200 800, move position center
# # for_window [app_id="gnome-terminal-server"] floating enable, resize set 1200 800, move position center
# for_window [class="Tor"] floating enable, resize set 1600 1020, move position center
# # for_window [class="GParted"] floating enable border normal


for_window [app_id="transmission-gtk"] floating enable, resize set 1200 800, move position center
for_window [app_id="mpv"] floating enable, resize set 1200 800, move position center
for_window [class="ffplay"] floating enable, resize set 1200 800, move position center
# for_window [class="Emacs"] floating enable, resize set 1200 800, move position center
# for_window [app_id="telegram-desktop_telegram-desktop"] floating enable, resize set 930 1020
for_window [app_id="Alacritty"] floating enable, resize set 1200 800, move position center
for_window [app_id="copyq"] floating enable, resize set 1000 990, move position center
# for_window [app_id="gnome-terminal-server"] floating enable, resize set 1200 800, move position center
for_window [class="Tor"] floating enable, resize set 1600 1020, move position center

#+end_src

** Colors

#+begin_src conf :tangle ~/.config/sway/config
# class                   border  backgr. indic.   child_border
  #client.focused          #556064 #556064 #FDF6E3
  client.focused          #556064 #556064 #FDF6E3 #556064
  client.focused_inactive #2F3D44 #2F3D44 #454948
  client.unfocused        #282c34 #282c34 #454948
#+end_src

** Themes

#+begin_src conf :tangle ~/.config/sway/config
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Arc-Dark'
    gsettings set $gnome-schema icon-theme 'Papirus-Dark'
    # gsettings set $gnome-schema cursor-theme 'Your cursor Theme'
    # gsettings set $gnome-schema font-name 'Your font name'
}
#+end_src

** Cursor

#+begin_src conf :tangle ~/.config/sway/config
seat * hide_cursor 1000
#+end_src

** Font for window titles

#+begin_src conf :tangle ~/.config/sway/config
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font xft:URWGothic-Book 11
font xft:URWGothic-Book 0
#+end_src

** Transparency

#+begin_src conf :tangle ~/.config/sway/config
set $opacity 0.93
for_window [class="Emacs"] opacity $opacity
for_window [app_id="kitty"] opacity $opacity
#for_window [class="jetbrains-idea-ce"] opacity $opacity
for_window [app_id="Alacritty"] opacity $opacity
#+end_src

** Support Java apps

#+begin_src conf :tangle ~/.config/sway/config
exec wmname LG3D
#+end_src

** Autostart apps

fix mako: Failed to acquire service name: Permission denied

#+begin_src conf :tangle ~/.config/sway/config
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec --no-startup-id mako
exec --no-startup-id dunst -mouse_left_click
exec --no-startup-id emacs --fg-daemon

exec --no-startup-id "sleep 13; swaymsg 'workspace 1; exec emacsclient -c -n -a \"\"'"
exec --no-startup-id "sleep 15; swaymsg 'workspace 2; exec emacsclient -c -n -a \"\"'"
# exec --no-startup-id "sleep 15; swaymsg 'workspace 3; exec ~/idea/bin/idea.sh'"
# exec --no-startup-id "sleep 13; swaymsg 'workspace 3; exec intellij-idea-community'"
exec --no-startup-id "sleep 2; swaymsg 'workspace 4; exec firefox'"
exec --no-startup-id "sleep 7; swaymsg 'workspace 5; exec telegram-desktop'"
# exec --no-startup-id "sleep 15; swaymsg 'workspace 5; exec /snap/bin/emacsclient -c -n -a \"\" -e \"(telega)\"'"

exec --no-startup-id python3 ~/squad.py

# exec --no-startup-id env QT_QPA_PLATFORM=xcb copyq
exec --no-startup-id copyq --start-server

#exec --no-startup-id telegram-desktop -startintray
# exec --no-startup-id exec transmission-gtk -m
#+end_src

** Include

#+begin_src conf :tangle ~/.config/sway/config
include /etc/sway/config.d/*
#+end_src

* Hyprland
** Monitor

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Monitors/
# monitor=,preferred,auto,1
# monitor=LVDS-1, 1366x768, 0x0, 1, transform, 1

monitor=eDP-1, disabled
monitor=HDMI-A-1, 1920x1080, auto, 1
# monitor=,preferred,auto,1
# monitor=HDMI-A-1, disabled
# monitor=eDP-1, 1920x1080, auto, 1
#+end_src

** Apps at launch

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
exec-once=/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec-once = emacs --fg-daemon
# exec-once = swaybg -i /run/media/solus/hdd/Pictures/wallpapers/27.jpg -m fill
# exec-once = swaybg -o \* -i `find /run/media/solus/hdd/Pictures/wallpapers -type f | shuf -n 1` -m fill
exec-once = swaybg -o \* -i `find /home/solus/Pictures -type f | shuf -n 1` -m fill
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
# exec-once=dbus-update-activation-environment --all
exec-once=systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = waybar
exec-once = nm-applet
exec-once = firefox
# exec-once = copyq --start-server
exec-once = env QT_QPA_PLATFORM=xcb copyq --start-server
exec-once = wl-paste --watch cliphist store
# exec-once = qutebrowser
# exec-once = /home/solus/idea/bin/idea.sh
# exec-once = transmission-qt -m

exec-once=/home/solus/.config/hypr/startup.sh
#+end_src

** Source

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf
#+end_src

** Variables
*** input

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us,ru
    kb_variant =
    kb_model =
    kb_options = grp:alt_shift_toggle,grp_led:scroll,caps:swapescape
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = no
    }

    sensitivity = -0.5 # -1.0 - 1.0, 0 means no modification.
}
#+end_src

*** general

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Variables/ for more
general {
#bc8420
    gaps_in = 5
    gaps_out = 10
    # border_size = 0
    border_size = 2
    # col.active_border = rgba(1affffee)
    col.active_border = rgb(bc8420)
    col.inactive_border = rgba(595959aa)

    layout = dwindle

    max_fps=60

    cursor_inactive_timeout = 1
}
#+end_src

*** decoration

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Variables/ for more
# cursor_inactive_timeout = 0
decoration {

    rounding = 10

    blur {
        enabled = false
        size = 3
        passes = 1
        new_optimizations = true
    }

    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)

    # dim_inactive = 1
    # dim_strength = 0.5
}
#+end_src

*** animations

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
animations {
    enabled = false

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    bezier = myBezier1, 0.03, 0.18, 0.26, 0.63

    # animation = windows, 1, 7, myBezier, slide
    # animation = windowsOut, 1, 7, default, popin 80%
    animation = windowsIn, 1, 7, myBezier, slide
    animation = windowsOut, 1, 7, myBezier1, slide
    animation = border, 1, 10, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default, fade
}
#+end_src

*** dwindle

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
dwindle {
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
    no_gaps_when_only = true
}
#+end_src

*** master

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
master {
    new_is_master = true
    no_gaps_when_only = true
    inherit_fullscreen = true
}
#+end_src

*** gestures

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Variables/ for more
gestures {
    workspace_swipe = off
}
#+end_src

** Keywords

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER
#+end_src

** Rules

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# Example windowrule v1
# windowrule = float, ^(kitty)$

# workspace = name:1, monitor:LVDS-1
# workspace = name:1, monitor:VGA-1
# workspace = name:2, monitor:VGA-1
# workspace = name:3, monitor:VGA-1
# workspace = name:4, monitor:VGA-1
# workspace = name:5, monitor:VGA-1
# workspace = name:6, monitor:VGA-1
# workspace = name:7, monitor:VGA-1
# workspace = name:8, monitor:VGA-1
# workspace = name:9, monitor:VGA-1

# Example windowrule v2
# windowrulev2 = float, size 1200 800, class:^(Alacritty)$
windowrulev2 = float, class:^(Alacritty)$
windowrulev2 = size 1200 800, class:^(Alacritty)$
windowrulev2 = center, class:^(Alacritty)$

windowrulev2 = float, class:^(Tor Browser)$
windowrulev2 = size 1600 1020, class:^(Tor Browser)$
windowrulev2 = move 160 42, class:^(Tor Browser)$

windowrulev2 = float, class:^(transmission-qt)$
windowrulev2 = size 1200 800, class:^(transmission-qt)$
windowrulev2 = center, class:^(transmission-qt)$

# windowrulev2 = float, class:^(com.github.hluk.copyq)$
# windowrulev2 = size 957 1026, class:^(com.github.hluk.copyq)$
# windowrulev2 = center, class:^(com.github.hluk.copyq)$
windowrulev2 = float, class:^(copyq)$
windowrulev2 = size 1025 1026, class:^(copyq)$
windowrulev2 = center, class:^(copyq)$

windowrulev2 = float, class:^(mpv)$
windowrulev2 = size 1200 800, class:^(mpv)$
windowrulev2 = center, class:^(mpv)$

windowrulev2 = workspace 3, class:^(jetbrains-idea-ce)$
windowrulev2 = workspace 4, class:^(firefox)$
windowrulev2 = workspace 4, class:^(qutebrowser)$
# windowrulev2 = workspace 5 silent, class:^(telegramdesktop)$
windowrulev2 = workspace 5 silent, class:^(org.telegram.desktop)$
windowrulev2 = opacity 0.97 0.97, class:^(Emacs)$
#+end_src

** Binds

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
#pulse
# bind = $mainMod, F2, exec, amixer -q set Master 2%- unmute
# bind = $mainMod, F3, exec, amixer -q set Master 2%+ unmute
# bind = $mainMod, F4, exec, amixer -q set Master toggle
# bind = $mainMod, XF86AudioLowerVolume, exec, amixer -q set Master 2%- unmute
# bind = $mainMod, XF86AudioRaiseVolume, exec, amixer -q set Master 2%+ unmute
# bind = $mainMod, XF86AudioMute, exec, amixer -q set Master toggle

#pipewire
bind = $mainMod, XF86AudioMute, exec, pactl set-sink-mute 0 toggle
bind = $mainMod, XF86AudioLowerVolume, exec, pactl set-sink-volume 0 -2%
bind = $mainMod, XF86AudioRaiseVolume, exec, pactl set-sink-volume 0 +2%
bind = $mainMod, F1, exec, pactl set-sink-mute 0 toggle
bind = $mainMod, F2, exec, pactl set-sink-volume 0 -2%
bind = $mainMod, F3, exec, pactl set-sink-volume 0 +2%
#mic
# pactl set-source-volume 0 +2%
# pactl set-source-volume 0 -2%
# pactl set-source-mute 0 1 #mute
# pactl set-source-mute 0 0 #unmute

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = ALT, o, exec, alacritty
bind = $mainMod, q, killactive
bind = ALT, e, exec, emacsclient -c -n -a ""
bind = ALT, i, exec, /home/solus/idea/bin/idea.sh
bind = $mainMod, M, exit
bind = $mainMod, Space, togglefloating
bind = $mainMod, D, exec, wofi --show drun
bind = $mainMod, P, pseudo # dwindle
bind = $mainMod, J, togglesplit # dwindle
bind = $mainMod, F, fullscreen, 1 # dwindle
bind = $mainMod SHIFT, T, exec, sh -c '$HOME/.tor-browser/Browser/start-tor-browser' --detach

bind = ALT, c, exec, copyq toggle
# bind = $mainMod, V, exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy
# bind = $mainMod, V, exec, cliphist list | wofi --dmenu | cliphist decode | ydotool type "`wl-paste`"
bind= $mainMod, V, exec, cliphist list | wofi --show dmenu -H 1025 -W 1026| cliphist decode | wl-copy && wtype -M ctrl -P v -m ctrl

# Turn Off monitor LVDS-1
# bind = $mainMod SHIFT, O, exec, hyprctl dispatch dpms off LVDS-1

# Whole screen
bind = $mainMod SHIFT, F10, exec, grim
# Current window
# bind = $mainMod SHIFT, F11, exec, grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')"
# Part of the screen:
bind = $mainMod SHIFT, F12, exec, grim -g "$(slurp)"

# Move focus with mainMod + arrow keys
bind = ALT, l, movefocus, l
bind = ALT, h, movefocus, r
bind = ALT, k, movefocus, u
bind = ALT, j, movefocus, d

bind=$mainMod,g,togglegroup
bind=$mainMod,tab,changegroupactive

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9

bind=ALT, p, workspace, e-1
bind=ALT, n, workspace, e+1

#-------------------------------------------#
# switch between current and last workspace #
#-------------------------------------------#
binds {
    workspace_back_and_forth = true
    allow_workspace_cycles = true
}
bind=ALT, Tab, workspace, previous

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
#+end_src

** Java

#+begin_src conf :tangle ~/.config/hypr/hyprland.conf
# exec-once wmname LG3D
#+end_src

** startup

#+begin_src shell :tangle ~/.config/hypr/startup.sh
sleep 10

hyprctl keyword windowrule "workspace 1 silent,Emacs"
emacsclient -c -n &
sleep 3
hyprctl keyword windowrule "workspace unset,Emacs"

# hyprctl keyword windowrule "workspace 2 silent,Emacs"
# emacsclient -c -n &
# sleep 3
# hyprctl keyword windowrule "workspace unset,Emacs"

python3 $HOME/.squats.py &

telegram-desktop &
#+end_src

* Bspwm
** workspaces

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc
#! /bin/bash

INTERNAL_MONITOR="eDP"
EXTERNAL_MONITOR="HDMI-A-0"

if [[ "$1" = 0 ]]; then
  if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
    xrandr --output HDMI-A-0 --primary --mode 1920x1080 --rotate normal --output eDP --off
    bspc monitor "$INTERNAL_MONITOR" -r
    bspc monitor "$EXTERNAL_MONITOR" -d        
    # xrandr --output VGA-1 --primary --mode 1920x1080 --rotate normal --output LVDS-1 --mode 1366x768 --rotate left --left-of VGA-1
    # xrandr --output VGA-1 --primary --mode 1920x1080 --rotate normal --output LVDS-1 --off
    # xrandr --output HDMI-A-0 --primary --mode 1920x1080 --rotate normal --output eDP --off
  else
    xrandr --output eDP --primary --mode 1920x1080 --rotate normal --output HDMI-A-0 --off
    bspc monitor "$INTERNAL_MONITOR" -d        
  fi
fi

# bspc monitor eDP -d        
# bspc monitor eDP -r
# bspc monitor HDMI-A-0 -d        
# bspc monitor VGA-1 -d        
# bspc monitor -d        
#+end_src

** borders and gaps

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc
bspc config border_width         2
bspc config window_gap          10

bspc config normal_border_color "#282c34"
bspc config active_border_color "#282c34"
# bspc config focused_border_color "#bc8420"
bspc config focused_border_color "#5e81ac"
# bspc config focused_border_color "#34a2eb"
# bspc config focused_border_color "#d8dee9"

bspc config presel_feedback_color "fd2e59"

# gaps only between windows
#bspc config window_gap $gap;
#bspc config top_padding -$(($gap+2))
#bspc config left_padding -$(($gap+2))
#bspc config right_padding -$(($gap+4))
#bspc config bottom_padding $(($PANEL_HEIGHT-$gap))

bspc config borderless_monocle   true
bspc config gapless_monocle      true
bspc config paddingless_monocle	 false
#+end_src

** split ratio

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc
bspc config split_ratio          1.5
#+end_src

** pointer

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc
bspc config focus_follows_pointer true
bspc config pointer_modifier	super
#+end_src

** single monocle

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc
bspc config single_monocle	     true
#+end_src

** scheme

#+begin_src shell :tangle no
bspc config automatic_scheme	spiral
#+end_src

** rules

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc
bspc rule -a jetbrains-idea-ce follow=off desktop='^4'
bspc rule -a jetbrains-idea-ce follow=off desktop='^3'
bspc rule -a firefox follow=off desktop='^4'
bspc rule -a Tor* follow=off desktop='^6'
# bspc rule -a qutebrowser follow=off desktop='^4'
# bspc rule -a emacs follow=off
bspc rule -a Emacs state=tiled
# bspc rule -a Emacs state=floating follow=off rectangle=1350x900+285+110
# bspc rule -a Emacs state=tiled follow=off desktop='^1'
# bspc rule -a Emacs:media state=tiled follow=off desktop='^1'
# bspc rule -a Alacritty state=floating follow=off rectangle=1200x800+1123+150
bspc rule -a Alacritty state=floating follow=off rectangle=1010x713+465+167
bspc rule -a copyq state=floating follow=off rectangle=1025x1046+467+20
# bspc rule -a TelegramDesktop state=tiled follow=off desktop='^5'
# bspc rule -a TelegramDesktop state=floating follow=off desktop='^5'
bspc rule -a TelegramDesktop follow=off desktop='^5'
# bspc rule -a TelegramDesktop state=floating follow=off rectangle=420x900+1450+90 desktop='^5'
# bspc rule -a Steam state=floating follow=off rectangle=1350x900+285+90 desktop='^6'
# bspc rule -a transmission-qt state=floating follow=off rectangle=1200x800+355+150
bspc rule -a transmission-qt state=floating follow=off rectangle=976x628+205+74
bspc rule -a mpv state=floating rectangle=1350x900+295+86 follow=off
bspc rule -a ffplay state=floating rectangle=1350x900+285+90 follow=off
bspc rule -a dmenu rectangle=900x22+610+90
#+end_src

** autostarts

#+begin_src shell :tangle ~/.config/bspwm/bspwmrc

pgrep -x sxhkd > /dev/null || sxhkd &
# numlockx &
xsetroot -cursor_name left_ptr &
picom --config ~/.config/picom.conf &
# picom &
# feh --randomize --bg-fill /run/media/solus/hdd/Pictures/wallpapers/* &
# feh --bg-fill /run/media/solus/hdd/Pictures/wallpapers/27.jpg &
feh --randomize --bg-fill $HOME/Pictures/* &
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
dunst &
xfce4-power-manager &
unclutter &

killall emacs
emacs --fg-daemon &

pkill -f .squats.py
python3 $HOME/.squats.py &

sleep 2
setxkbmap -option caps:swapescape -layout us,ru -variant -option grp:alt_shift_toggle,grp_led:scroll &

$HOME/.config/polybar/polybar.sh &

killall nm-applet
nm-applet &

killall copyq
copyq &

sleep 3
emacsclient -c -n -a "" &
sleep 2
# bspc node -d ^2
bspc node -d ^1

# sleep 3
# emacsclient -c -n -a "" &
# bspc node -d ^3

sleep 3

# idea &
# pkill -f /home/solus/idea/jbr/bin/java
# $HOME/idea/bin/idea.sh &

killall firefox
firefox &

killall telegram-desktop
telegram-desktop &

sleep 10
# bspc desktop -f ^2
bspc desktop -f ^1
# transmission-qt -m &
#+end_src

** scripts
*** switch monitors

#+begin_src shell :tangle ~/.config/bspwm/switch_monitors.sh
#! /bin/bash

INTERNAL_MONITOR="eDP"
EXTERNAL_MONITOR="HDMI-A-0"
CURRENT_DESKTOP="$(bspc query -D -d focused)"

if [[ $(xrandr --listactivemonitors | grep "${EXTERNAL_MONITOR}") ]]; then
    # xrandr --output eDP --primary --mode 1920x1080 --rotate normal --output HDMI-A-0 --off

    bspc monitor "$INTERNAL_MONITOR" -d        
    # for desktop in $(bspc query -D -m "$EXTERNAL_MONITOR");	do
    #     bspc desktop "$desktop" --to-monitor "$INTERNAL_MONITOR"
    # done

    # bspc desktop Desktop --remove

    bspc desktop "$CURRENT_DESKTOP" --to-monitor "$INTERNAL_MONITOR"
    bspc monitor "$EXTERNAL_MONITOR" -r


else
    # xrandr --output HDMI-A-0 --primary --mode 1920x1080 --rotate normal --output eDP --off

    bspc monitor "$EXTERNAL_MONITOR" -d        
    # for desktop in $(bspc query -D -m "$INTERNAL_MONITOR");	do
    #     bspc desktop "$desktop" --to-monitor "$EXTERNAL_MONITOR"
    # done

    # bspc desktop Desktop --remove

    bspc desktop "$CURRENT_DESKTOP" --to-monitor "$EXTERNAL_MONITOR"

    bspc monitor "$INTERNAL_MONITOR" -r

fi



# SELECTED_DESKTOP="$(bspc query -D -d "$1")"
# SELECTED_MONITOR="$(bspc query -M -d "$1")"
# CURRENT_DESKTOP="$(bspc query -D -d focused)"
# CURRENT_MONITOR="$(bspc query -M -d focused)"

# if [ "$SELECTED_MONITOR" == "$CURRENT_MONITOR" ]; then
#   bspc desktop "$SELECTED_DESKTOP" -f
# else
#   ACTIVE_OTHER="$(bspc query -D -m "$SELECTED_MONITOR" -d .active)"
#   [ "$ACTIVE_OTHER" == "$SELECTED_DESKTOP" ] && ACTIVE_OTHER="$CURRENT_DESKTOP"
#   bspc desktop "$CURRENT_DESKTOP" --to-monitor "$SELECTED_MONITOR"
#   bspc desktop "$SELECTED_DESKTOP" --to-monitor "$CURRENT_MONITOR"
#   bspc desktop "$ACTIVE_OTHER" -f
#   bspc desktop "$SELECTED_DESKTOP" -f
# fi
#+end_src

** sxhkd
*** sxhkd reload

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + Escape
	pkill -USR1 -x sxhkd
#+end_src

*** hotkyes
**** quit/restart bspwm

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + shift + {q,r}
        bspc {quit,wm -r}
#+end_src

**** close and kill

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + q
	bspc node -{c}
#+end_src

**** alternate between the tiled and monocle layout

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + m
	bspc desktop -l next
#+end_src

**** send the newest marked node to the newest preselected node

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + y
	bspc node newest.marked.local -n newest.!automatic.local
#+end_src

**** swap the current node and the biggest node

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + g
	bspc node -s biggest.local
#+end_src

*** state/flags
**** set the window state

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
#+end_src

**** set the node flags

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}
#+end_src

*** scrathpad

#+begin_src conf :tangle no
super + a
	/home/olly/bin/bspwm_scratchpad.sh CCWF_RDP
#+end_src

*** focus/swap
**** focus the node in the given direction

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}
#+end_src

**** focus the node for the given path jump

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}
#+end_src

**** focus the next/previous node in the current desktop

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
alt + {j,k}
	bspc node -f {next,prev}.local
#+end_src

**** focus the next/previous occupied desktop

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
alt + {n,p}
	bspc desktop -f {next.occupied,prev.occupied}.local
#+end_src

**** focus the next/previous desktop in the current monitor

#+begin_src conf :tangle :tangle ~/.config/sxhkd/sxhkdrc
super + {less,greater}
	bspc desktop -f {prev,next}.local
#+end_src

**** focus the desktop or move app in the current monitor

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'
#+end_src

**** focus the last node/desktop

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
alt + shift + Tab
	bspc node -f last

alt + Tab
	bspc desktop -f last
#+end_src

**** focus the older or newer node in the focus history

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on
#+end_src

*** preselect
**** preselect the direction

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}
#+end_src

**** preselect the workspace for opening window

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + ctrl + {1-9}
	bspc node -o 0.{1-9}
#+end_src

**** preselect the ratio

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
#super + ctrl + {1-9}
#	bspc node -o 0.{1-9}
#+end_src

**** cancel the preselection for the focused node

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + ctrl + space
	bspc node -p cancel
#+end_src

**** cancel the preselection for the focused desktop

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel
#+end_src

*** move/resize
**** expand a window by moving one of its side outward

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
ctrl + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
#+end_src

**** contract a window by moving one of its side inward

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
ctrl + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
#+end_src

**** move a floating window

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
ctrl + alt + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
#+end_src

*** app keybindings

#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
super + d
    rofi -show drun -theme "$HOME/.config/rofi/config.rasi" -modi drun -display-drun "Run"

super + {_,shift + }Return
	{alacritty, bspc node -s biggest.local}

@Print
	scrot

shift + @Print
	scrot -d 5

alt + e
    emacsclient -c -n

super + ctrl + t
    sh -c '$HOME/.tor-browser/Browser/start-tor-browser' --detach

super + ctrl + s
    alacritty -e ~/.before_sleep.sh

super + {F2,F3,F4}
    {amixer -q set Master 2%- unmute,amixer -q set Master 2%+ unmute,amixer -q set Master toggle}

{XF86AudioRaiseVolume, XF86AudioLowerVolume, XF86AudioMute}
    {amixer -q set Master 2%+ unmute,amixer -q set Master 2%- unmute,amixer -q set Master toggle}

alt + i
    $HOME/idea/bin/idea.sh

alt + c
   copyq toggle

super + ctrl + m
    $HOME/.config/bspwm/switch_monitors.sh
#+end_src

* Qtile
** config

#+begin_src python :tangle ~/.config/qtile/config.py
# Copyright (c) 2010 Aldo Cortesi
# Copyright (c) 2010, 2014 dequis
# Copyright (c) 2012 Randall Ma
# Copyright (c) 2012-2014 Tycho Andersen
# Copyright (c) 2012 Craig Barnes
# Copyright (c) 2013 horsik
# Copyright (c) 2013 Tao Sauvage
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from libqtile import bar, layout, widget, hook
from libqtile.config import Click, Drag, Group, Key, Match, Screen
from libqtile.lazy import lazy
from libqtile.utils import guess_terminal

from subprocess import run
from os import path


class TelegaMsgCount(widget.base.ThreadPoolText):
    def __init__(self):
        self._path = path.expanduser("~/.telega-msg-count.txt")
        super().__init__(self._path, fmt=" {}", foreground="#e1d9c4", update_interval=3)

    def poll(self):
        msg_count: str = ""
        try:
             with open(self._path, "r", encoding="UTF-8") as f:
                  msg_count = f.readline()
        except FileNotFoundError:
             msg_count = "0(0)"
        return msg_count


mod = "mod4"
alt = "mod1"
terminal = guess_terminal()

keys = [
    Key([mod], "h", lazy.hide_show_bar(), desc="hide show bar"),
    # A list of available commands that can be bound to keys can be found
    # at https://docs.qtile.org/en/latest/manual/config/lazy.html
    # Switch between windows
    Key([alt], "h", lazy.layout.left(), desc="Move focus to left"),
    Key([alt], "l", lazy.layout.right(), desc="Move focus to right"),
    Key([alt], "j", lazy.layout.down(), desc="Move focus down"),
    Key([alt], "k", lazy.layout.up(), desc="Move focus up"),
    Key([mod], "space", lazy.layout.next(), desc="Move window focus to other window"),
    # Move windows between left/right columns or move up/down in current stack.
    # Moving out of range in Columns layout will create new column.
    Key([mod, "shift"], "h", lazy.layout.shuffle_left(), desc="Move window to the left"),
    Key([mod, "shift"], "l", lazy.layout.shuffle_right(), desc="Move window to the right"),
    Key([mod, "shift"], "j", lazy.layout.shuffle_down(), desc="Move window down"),
    Key([mod, "shift"], "k", lazy.layout.shuffle_up(), desc="Move window up"),
    # Grow windows. If current window is on the edge of screen and direction
    # will be to screen edge - window would shrink.
    Key([mod, "control"], "h", lazy.layout.grow_left(), desc="Grow window to the left"),
    Key([mod, "control"], "l", lazy.layout.grow_right(), desc="Grow window to the right"),
    Key([mod, "control"], "j", lazy.layout.grow_down(), desc="Grow window down"),
    Key([mod, "control"], "k", lazy.layout.grow_up(), desc="Grow window up"),
    Key([mod], "n", lazy.layout.normalize(), desc="Reset all window sizes"),
    # Toggle between split and unsplit sides of stack.
    # Split = all windows displayed
    # Unsplit = 1 window displayed, like Max layout, but still with
    # multiple stack panes
    Key(
        [mod, "shift"],
        "Return",
        lazy.layout.toggle_split(),
        desc="Toggle between split and unsplit sides of stack",
    ),
    Key([alt], "o", lazy.spawn(terminal), desc="Launch terminal"),
    # Toggle between different layouts as defined below
    Key([mod], "Tab", lazy.next_layout(), desc="Toggle between layouts"),
    Key([mod], "q", lazy.window.kill(), desc="Kill focused window"),
    Key([mod, "control"], "r", lazy.reload_config(), desc="Reload the config"),
    Key([mod, "control"], "q", lazy.shutdown(), desc="Shutdown Qtile"),
    Key([mod], "r", lazy.spawncmd(), desc="Spawn a command using a prompt widget"),

    # Switch between groups
    Key([alt], "n", lazy.screen.next_group(skip_empty=True), desc="Switch to next group"),
    Key([alt], "p", lazy.screen.prev_group(skip_empty=True), desc="Switch to prev group"),
    Key([alt], "Tab", lazy.screen.toggle_group(), desc="Switch to last visited group"),

    # Volume control
    Key([mod], "F2", lazy.spawn("amixer -q set Master 2%- unmute")),
    Key([mod], "F3", lazy.spawn("amixer -q set Master 2%+ unmute")),

    # Emacs
    Key([alt], "e", lazy.spawn("emacsclient -c -n")),

    Key([alt], "c", lazy.spawn("copyq toggle")),

    # Screenshots
    # fullscreen
    Key([mod, "shift"], "F10", lazy.spawn("scrot -e 'mv $f ~/Pictures'")),
    # Screenshot active window
    Key([mod, "shift"], "F11", lazy.spawn("scrot -u -e 'mv $f ~/Pictures'")),
    # Select region for screenshot
    Key([mod, "shift"], "F12", lazy.spawn("scrot -s -e 'mv $f ~/Pictures'")),

    # Browsers
    Key([mod, "shift"], "t", lazy.spawn("sh -c '$HOME/.tor-browser/Browser/start-tor-browser' --detach")),
]

groups = [
    Group(name="", spawn="emacsclient -c -n -a \"\""),
    Group(name="", spawn="emacsclient -c -n -a \"\""),
    Group(name="", matches=[Match(wm_class="jetbrains-idea-ce")]),
    # Group(name="", spawn="firefox", matches=[Match(wm_class="firefox")]),
    Group(name="", matches=[Match(wm_class="firefox")]),
    Group(name="", matches=[Match(wm_class="telegram-desktop")]),
    Group(name=""),
]

for n, i in enumerate(groups, 1):
    keys.extend(
        [
            # mod1 + letter of group = switch to group
            Key(
                [mod],
                str(n),
                lazy.group[i.name].toscreen(),
                desc=f"Switch to group {i.name}",
            ),
            # mod1 + shift + letter of group = switch to & move focused window to group
            Key(
                [mod, "shift"],
                str(n),
                lazy.window.togroup(i.name, switch_group=True),
                desc=f"Switch to & move focused window to group {i.name}",
            ),
            # Or, use below if you prefer not to switch to that group.
            # # mod1 + shift + letter of group = move focused window to group
            # Key([mod, "shift"], i.name, lazy.window.togroup(i.name),
            #     desc="move focused window to group {}".format(i.name)),
        ]
    )

layouts = [
    layout.Max(),
    # layout.Columns(),
    # Try more layouts by unleashing below layouts.
    # layout.Stack(num_stacks=2),
    layout.Bsp(
        border_focus="#556064",
        border_normal="282c34",
        border_width=2,
        margin=10
    ),
    # layout.Matrix(),
    # layout.MonadTall(),
    # layout.MonadWide(),
    # layout.RatioTile(),
    # layout.Tile(),
    # layout.TreeTab(),
    # layout.VerticalTile(),
    # layout.Zoomy(),
    # layout.Floating(
    #     border_focus="#556064",
    #     border_normal="282c34",
    #     border_width=2
    # ),
]

widget_defaults = dict(
    font="JetBrains Mono SemiBold",
    fontsize=12,
    padding=3,
)
extension_defaults = widget_defaults.copy()

screens = [
    Screen(
        top=bar.Bar(
            [
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4"),
                widget.DF(
                    visible_on_warn=False,
                    partition="/",
                    format="{uf}{m}",
                    foreground="#e1d9c4",
                ),
                # widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                # widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4"),
                # widget.DF(
                #     visible_on_warn=False,
                #     partition="/run/media/solus/hdd",
                #     format="{uf}{m}",
                #     foreground="#e1d9c4",
                # ),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4"),
                widget.Memory(measure_mem="G", format="{MemUsed:.2f}{mm}", foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4",),
                widget.CPU(format="{load_percent}%", update_interval=2, foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4",),
                widget.ThermalZone(
                    format="{temp}°C",
                    # zone="/sys/class/thermal/thermal_zone2/temp",
                    zone="/sys/class/thermal/thermal_zone0/temp",
                    fgcolor_normal="#e1d9c4"
                ),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4"),
                widget.Volume(fmt="{}", foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.CurrentLayout(foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.WindowCount(foreground="#e1d9c4"),
                widget.Prompt(foreground="#e1d9c4"),
                widget.Spacer(),
                widget.GroupBox(
                    highlight_method="block",
                    background="#282c34",
                    block_highlight_text_color="#ffb52a",
                    this_current_screen_border="#282c34",
                    active="#e1d9c4",
                    hide_unused=True,
                    font="FontAwesome6Free",
                    fontsize=14,
                ),
                widget.Spacer(),
                widget.Spacer(length=bar.STRETCH),
                widget.KeyboardLayout(configured_keyboards=["en", "ru"], foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.Battery(battery="BAT0", charge_char="", discharge_char="",format = "{char}  {percent:2.0%} {hour:d}:{min:02d}", foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4"),
                widget.Clock(format="%A, %d %B", foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.TextBox(fmt="", font="FontAwesome6Free", foreground="#e1d9c4"),
                widget.Clock(format="%H:%M", foreground="#e1d9c4"),
                widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                # TelegaMsgCount(),
                # widget.Sep(padding=15, size_percent=55, foreground="#e1d9c4"),
                widget.Systray(),
                widget.Sep(linewidth=0, padding=7),
                # widget.QuickExit(),
            ],
            22,
            background = "#282c34",
            # border_width=[2, 0, 2, 0],  # Draw top and bottom borders
            # border_color=["ff00ff", "000000", "ff00ff", "000000"]  # Borders are magenta
        ),
    ),
]

# Drag floating layouts.
mouse = [
    Drag([mod], "Button1", lazy.window.set_position_floating(), start=lazy.window.get_position()),
    Drag([mod], "Button3", lazy.window.set_size_floating(), start=lazy.window.get_size()),
    Click([mod], "Button2", lazy.window.bring_to_front()),
]

dgroups_key_binder = None
dgroups_app_rules = []  # type: list
follow_mouse_focus = True
bring_front_click = False
cursor_warp = False
floating_layout = layout.Floating(
    float_rules=[
        # Run the utility of `xprop` to see the wm class and name of an X client.
        ,*layout.Floating.default_float_rules,
        Match(wm_class="confirmreset"),  # gitk
        Match(wm_class="makebranch"),  # gitk
        Match(wm_class="maketag"),  # gitk
        Match(wm_class="ssh-askpass"),  # ssh-askpass
        Match(title="branchdialog"),  # gitk
        Match(title="pinentry"),  # GPG key password entry
    ]
)
auto_fullscreen = True
focus_on_window_activation = "smart"
reconfigure_screens = True

# If things like steam games want to auto-minimize themselves when losing
# focus, should we respect this or not?
auto_minimize = True

# When using the Wayland backend, this can be used to configure input devices.
wl_input_rules = None


@hook.subscribe.startup_once
def startup_once():
    path_to_script = path.expanduser("~/.config/qtile/startup_once.sh")
    run([path_to_script])


@hook.subscribe.startup
def startup_every_time():
    path_to_script = path.expanduser("~/.config/qtile/startup_everytime.sh")
    run([path_to_script])

@hook.subscribe.client_new
def floating_dialogs(window):
    dialog = window.window.get_wm_type() == 'dialog'
    transient = window.window.get_wm_transient_for()
    if dialog or transient:
        window.floating = True

# XXX: Gasp! We're lying here. In fact, nobody really uses or cares about this
# string besides java UI toolkits; you can see several discussions on the
# mailing lists, GitHub issues, and other WM documentation that suggest setting
# this string if your java app doesn't work correctly. We may as well just lie
# and say that we're a working one by default.
#
# We choose LG3D to maximize irony: it is a 3D non-reparenting WM written in
# java that happens to be on java's whitelist.
wmname = "LG3D"
#+end_src

** startup once

#+begin_src shell :tangle ~/.config/qtile/startup_once.sh
#!/bin/sh

picom --config ~/.config/picom.conf &
# feh --randomize --bg-fill /run/media/solus/hdd/Pictures/wallpapers/* &
feh --randomize --bg-fill /home/solus/Pictures/1.jpg &
# feh --bg-fill /run/media/solus/hdd/Pictures/wallpapers/27.jpg &
dunst &
emacs --fg-daemon &
xfce4-power-manager &
firefox &
telegram-desktop &
copyq &
nm-applet &
# transmission-gtk -m &
# python3 $HOME/squad.py &
$HOME/idea/bin/idea.sh &
#+end_src

** startup everytime

#+begin_src shell :tangle ~/.config/qtile/startup_everytime.sh
#!/bin/sh

INTERNAL_MONITOR="eDP"
EXTERNAL_MONITOR="HDMI-A-0"

xrandr --output "$EXTERNAL_MONITOR" --primary --mode 1920x1080 --rotate normal --output "$INTERNAL_MONITOR" --off
# if [[ "$1" = 0 ]]; then
#   if [[ $(xrandr -q | grep "${EXTERNAL_MONITOR} connected") ]]; then
#     xrandr --output "$EXTERNAL_MONITOR" --primary --mode 1920x1080 --rotate normal --output "$INTERNAL_MONITOR" --off
#   else
#     xrandr --output "$INTERNAL_MONITOR" --primary --mode 1920x1080 --rotate normal --output "$EXTERNAL_MONITOR" --off
#   fi
# fi

setxkbmap -option caps:swapescape -layout us,ru -variant -option grp:alt_shift_toggle,grp_led:scroll &
#+end_src

* Waybar
** top
*** waybar config

#+begin_src conf :tangle ~/.config/waybar/config
{
    "layer": "top", // Waybar at top layer
    //"position": "top", // Waybar position (top|bottom|left|right)
    "height": 24, // Waybar height (to be removed for auto height)
    // "width": 1280, // Waybar width
    // Choose the order of the modules
    //"output": "HDMI-A-1",
    "output": ["eDP-1", "HDMI-A-1"],
    //"output": ["LVDS-1", "VGA-1,", "eDP-1", "HDMI-A-1"],
    "modules-left": [
        "disk",
        //"custom/hdd",
        "custom/separator",
        "cpu",
        "temperature",
        "custom/separator",
        "memory",
        "custom/separator",
        "pulseaudio",
        "custom/separator",
        //"network",
        //"hyprland/mode"
        "sway/mode"
    ],
    //"modules-center": ["hyprland/workspaces"],
    "modules-center": ["sway/workspaces"],
    "modules-right": [
        "custom/update",
        "custom/separator",
        //"hyprland/language",
        "sway/language",
        "custom/separator",
        "battery",
        "custom/separator",
        "clock",
        "custom/separator",
        "tray"
    ],
    // Modules configuration
    //"hyprland/workspaces": {
    "sway/workspaces": {
        "disable-scroll": true,
        "all-outputs": true,
        "on-click": "activate",
        "format": "{icon}",
        "format-icons": {
            "1": "",
            "2": "",
            "3": "",
            "4": "",
            "5": "",
            //"1": "",
            //"2": "",
            //"3": "",
            //"4": "",
            //"5": "",
            //"6": "",
            "urgent": "",
            "focused": "",
            "default": ""
        },
        "tooltip": false
    },
    //"hyprland/language": {
    "sway/language": {
        "format": "{}",
        "format-en": "en",
        "format-ru": "ru",
        "tooltip": false
    },
    //"hyprland/mode": {
    "sway/mode": {
        "format": "<span style=\"italic\">{}</span>"
    },
    "tray": {
        "icon-size": 18,
        "spacing": 10
    },
    "clock": {
        "timezone": "Europe/Moscow",
        "format": "{: %A, %d %B |  %H:%M}",
        "tooltip": false
    },
    "cpu": {
        "format": " {usage}%",
        "tooltip": false
    },
    "memory": {
        "format":  " {used:0.2f} GiB",
        "tooltip": false
    },
    "temperature": {
        //"thermal-zone": 2,
        //"hwmon-path": "/sys/class/hwmon/hwmon1/temp1_input",
        "hwmon-path": "/sys/class/thermal/thermal_zone0/temp",
        "critical-threshold": 80,
        "format-critical": "{icon} {temperatureC}°C",
        "format": "{icon} {temperatureC}°C",
        "format-icons": ["", "", ""],
        "tooltip": false
    },
    "network": {
        // "interface": "wlp2*", // (Optional) To force the use of this interface
        //"format-wifi": "{essid} ({signalStrength}%) ",
        //"format-ethernet": "{ifname}: {ipaddr}/{cidr} ",
        "format-ethernet": "",
        "format-linked": "{ifname} (No IP) ",
        "format-disconnected": "Disconnected ⚠",
        "format-alt": "{ifname}: {ipaddr}/{cidr}"
    },
    "pulseaudio": {
        // "scroll-step": 1, // %, can be a float
        "format": "{icon} {volume}% {format_source}",
        "format-bluetooth": "{icon} {volume}% {format_source}",
        "format-bluetooth-muted": " {icon} {format_source}",
        "format-muted": " {format_source}",
        "format-source": " {volume}%",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "default": ["", "", ""]
        },
        "on-click": "pavucontrol",
        "tooltip": false
    },
    "disk": {
        "interval": 30,
        "format": " {free}",
        "path": "/",
        "tooltip": false
    },
    "custom/hdd": {
        "interval": 30,
        "format": " {}iB",
        "exec": "df -H /run/media/solus/hdd | awk '{print $4}' | cut -d $'\n' -f 2",
        "tooltip": false
    },
    "custom/separator": {
        "format": "|",
        "interval": "once",
        "tooltip": false
    },
    "custom/update": {
        "format": " {}",
        "interval": 3600,
        "exec-if": "[ $(checkupdates | wc -l) -ne 0 ]",
        "exec": "checkupdates | wc -l",
        "tooltip": false
    },
    //"battery": {
    //    "bat": "BAT0",
    //    "interval": 60,
    //    "states": {
    //        "warning": 30,
    //        "critical": 15
    //    },
    //    "format": "{icon} {capacity}%",
    //    //"format": "{capacity}% {icon}",

    //    //"format-charging": " {capacity}%",
    //    //"format-plugged": " {capacity}%",
    //    //"format-charging": " {capacity}%",
    //    //"format-plugged": " {capacity}%",
    //    "format-charging": "{icon} {capacity}%",
    //    "format-plugged": "{icon}",

    //    //"format-alt": "{time} {icon}",
    //    "format-full": " {capacity}%",

    //    "format-icons": ["", "", "", "", ""],
    //    "format-icons": {
    //        //"discharging": ["", "", "", "", "", ""],
    //        //"charging": ["", "", "", "", "", ""],
    //        "discharging": ["", "", "", "", "", ""],
    //        "charging": ["", "", "", "", "", ""],
    //        "plugged": "ﮣ"
    //    },
    //    //"format-icons": ["", "", ""]

    //    "max-length": 25
    //}
    "battery": {
            "format": "<span font='Font Awesome 5 Free 11'>{icon}</span> {capacity}% - {time}",
            "format-icons": ["", "", "", "", ""],
            "format-time": "{H}h{M}m",
            "format-charging": "<span font='Font Awesome 5 Free'></span> <span font='Font Awesome 5 Free 11'>{icon}</span> {capacity}% - {time}",
            "format-full": "<span font='Font Awesome 5 Free'></span>  <span font='Font Awesome 5 Free 11'>{icon}</span>  Charged",
            "bat": "BAT0",
            "interval": 30,
            "states": {
                "warning": 25,
                "critical": 10
            },
            "tooltip": false,
            "on-click": "2"
        },
    }
#+end_src

*** waybar style

#+begin_src css :tangle ~/.config/waybar/style.css
*{
    border: none;
    border-radius: 0;
    /* `otf-font-awesome` is required to be installed for icons */
    font-family: "JetBrains Mono", "Font Awesome 6 Free", "Font Awesome 6 Brands";
    /* font-family: monospace; */
    font-size: 14px;
    min-height: 0;
    background-color: #282c34;
}

window#waybar {
    background-color: #282c34;
    transition-property: background-color;
    transition-duration: .5s;
}

#workspaces button {
    padding: 0 7px;
    color: #e1d9c4;
}

/* https://github.com/Alexays/Waybar/wiki/FAQ#the-workspace-buttons-have-a-strange-hover-effect */
#workspaces button:hover {
    background: #282c34;
    box-shadow: inherit;
    text-shadow: inherit;
}

/* #workspaces button.active { */
#workspaces button.focused {
    color: #bc8420;
}

#workspaces button.urgent {
    color: #eb4d4b;
}

#mode {
    background-color: #64727D;
}

#clock,
#battery,
#cpu,
#memory,
#disk,
#custom-hdd,
#temperature,
#network,
#pulseaudio,
/* #custom-media, */
#custom-update,
#tray,
#mode,
#idle_inhibitor,
#language,
#mpd {
    padding: 0 7px;
    color: #e1d9c4;
    background-color: #282c34;
}

#window,
#workspaces {
    margin: 0 4px;
}

/* If workspaces is the leftmost module, omit left margin */
.modules-left > widget:first-child > #workspaces {
    margin-left: 0;
}

/* If workspaces is the rightmost module, omit right margin */
.modules-right > widget:last-child > #workspaces {
    margin-right: 0;
}

@keyframes blink {
    to {
        background-color: #ffffff;
        color: #000000;
    }
}

#temperature.critical {
    color: #f53c3c;
}

label:focus {
    background-color: #000000;
}

#tray > .needs-attention {
    -gtk-icon-effect: highlight;
    background-color: #eb4d4b;
}

#keyboard-state {
    padding: 0 0px;
    margin: 0 5px;
    min-width: 16px;
}

#keyboard-state > label {
    padding: 0 5px;
}

#keyboard-state > label.locked {
    background: rgba(0, 0, 0, 0.2);
}

#custom-separator {
    color: #e1d9c4;
}
#+end_src

** left
*** waybar config

#+begin_src conf :tangle no
{
    // "layer": "top", // Waybar at top layer
    "position": "left", // Waybar position (top|bottom|left|right)
    //"height": 24, // Waybar height (to be removed for auto height)
    //"width": 28, // Waybar width
    // "width": 1280, // Waybar width
    // Choose the order of the modules
    "output": "VGA-1",
    //"output": ["LVDS-1", "VGA-1,"],
    "modules-left": [
        "custom/separator",
        "disk#icon",
        "disk",
        "custom/separator",
        "disk#icon",
        "disk#hdd",
        "custom/separator",
        "cpu#icon",
        "cpu",
        "custom/separator",
        "temperature#icon",
        "temperature",
        "custom/separator",
        "memory#icon",
        "memory",
        "custom/separator",
        "pulseaudio#output-icon",
        "pulseaudio#output",
        //"pulseaudio",
        //"custom/separator",
        //"pulseaudio#source-icon",
        //"pulseaudio#source",
        "custom/separator",
        "network",
        "hyprland/mode"
        //"sway/mode"
    ],
    //"modules-center": ["sway/workspaces"],
    "modules-center": ["hyprland/workspaces"],
    "modules-right": [
        // "custom/update",
        "custom/separator",
        //"sway/language",
        "hyprland/language",
        "custom/separator",
        "clock#cal-icon",
        "clock#a",
        "clock#d",
        "clock#b",
        "custom/separator",
        "clock#icon",
        "clock#H",
        "clock#M",
        "custom/separator",
        "tray"
    ],
    // Modules configuration
    //"sway/workspaces": {
    "hyprland/workspaces": {
        "disable-scroll": true,
        "all-outputs": true,
        "format": "{icon}",
        "format-icons": {
            "1": "",
            "2": "",
            "3": "",
            "4": "",
            "5": "",
            "urgent": "",
            "focused": "",
            "default": ""
        }
    },
    //"sway/language": {
    "hyprland/language": {
        "format": "{}"
    },
    //"sway/mode": {
    "hyprland/mode": {
        "format": "<span style=\"italic\">{}</span>"
    },
    "tray": {
        "icon-size": 18,
        "spacing": 10
    },
    "clock": {
        "timezone": "Europe/Moscow",
        //"format": "{: %A, %d %B |  %H:%M}",
        "format": "{:%a\n%d\n%b\n\n%H\n%M}",
        "tooltip": false
    },
    "clock#cal-icon": {
        "timezone": "Europe/Moscow",
        "format": "",
        "tooltip": false
    },
    "clock#a": {
        "format": "{:%a}",
        "tooltip": false
    },
    "clock#d": {
        "timezone": "Europe/Moscow",
        "format": "{:%d}",
        "tooltip": false
    },
    "clock#b": {
        "timezone": "Europe/Moscow",
        "format": "{:%b}",
        "tooltip": false
    },
    "clock#H": {
        "timezone": "Europe/Moscow",
        "format": "{:%H}",
        "tooltip": false
    },
    "clock#M": {
        "timezone": "Europe/Moscow",
        "format": "{:%M}",
        "tooltip": false
    },
    "clock#icon": {
        "format": "",
        "tooltip": false
    },
    "cpu": {
        //"format": "\n{usage}%",
        "format": "{usage}%",
        "tooltip": false
    },
    "cpu#icon": {
        "format": "",
        "interval": "once",
        "tooltip": false
    },
    "memory": {
        //"format":  " {used:0.2f} GiB"
        //"format":  "\n{percentage}%"
        "format":  "{percentage}%"
    },
    "memory#icon": {
        "format": ""
    },
    "temperature": {
        // "thermal-zone": 2,
        "hwmon-path": "/sys/class/hwmon/hwmon1/temp1_input",
        "critical-threshold": 80,
        //"format-critical": "{icon} {temperatureC}°C",
        //"format": "{icon} {temperatureC}°C",
        "format-critical": "{icon}\n{temperatureC}°C",
        //"format": "{icon}\n{temperatureC}°C",
        "format": "{temperatureC}°C",
        "format-icons": ["", "", ""]
    },
    "temperature#icon": {
        "hwmon-path": "/sys/class/hwmon/hwmon1/temp1_input",
        "critical-threshold": 80,
        "format-critical": "{icon}",
        "format": "{icon}",
        "format-icons": ["", "", ""]
    },
    "network": {
        // "interface": "wlp2*", // (Optional) To force the use of this interface
        //"format-wifi": "{essid} ({signalStrength}%) ",
        //"format-ethernet": "{ifname}: {ipaddr}/{cidr} ",
        "format-ethernet": "",
        "format-linked": "{ifname} (No IP) ",
        //"format-disconnected": "Disconnected ⚠",
        "format-disconnected": "⚠",
        "format-alt": "{ifname}: {ipaddr}/{cidr}"
    },
    "pulseaudio": {
        // "scroll-step": 1, // %, can be a float
        //"format": "{icon} {volume}% {format_source}",
        "format": "{volume}% {format_source}",
        //"format": "{icon}\n{volume}%",
        "format-bluetooth": "{icon} {volume}% {format_source}",
        "format-bluetooth-muted": " {icon}  {format_source}",
        "format-muted": " {format_source}",
        "format-source": " {volume}%",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "space": " ",
            "default": ["", "", ""]
        },
        "on-click": "pavucontrol"
    },
    "pulseaudio#output-icon": {
        // "scroll-step": 1, // %, can be a float
        "format": "{icon}",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "space": " ",
            "default": ["", "", ""]
        }
    },
    "pulseaudio#output": {
        // "scroll-step": 1, // %, can be a float
        //"format": "{icon} {volume}% {format_source}",
        "format": "{volume}%",
        //"format": "{icon}\n{volume}%",
        "format-bluetooth": "{icon} {volume}% {format_source}",
        "format-bluetooth-muted": " {icon}  {format_source}",
        "format-muted": " {format_source}",
        "format-source": " {volume}%",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "space": " ",
            "default": ["", "", ""]
        },
        "on-click": "pavucontrol"
    },
    "pulseaudio#source-icon": {
        "format": "",
        "format-muted": " {format_source}",
        "format-source": " {volume}%",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "space": " ",
            "default": ["", "", ""]
        },
        "on-click": "pavucontrol"
    },
    "pulseaudio#source": {
        "format": "{format_source}",
        "format-muted": " {format_source}",
        "format-source": "{volume}%",
        "format-source-muted": "",
        "format-icons": {
            "headphone": "",
            "hands-free": "",
            "headset": "",
            "phone": "",
            "portable": "",
            "car": "",
            "space": " ",
            "default": ["", "", ""]
        },
        "on-click": "pavucontrol"
    },
    "disk": {
        "interval": 30,
        //"format": " {free}",
        //"format": "\n{percentage_free}%",
        "format": "{percentage_free}%",
        "path": "/"
    },
    "disk#hdd": {
        "interval": 30,
        //"format": " {free}",
        //"format": "\n{percentage_free}%",
        "format": "{percentage_free}%",
        "path": "/run/media/solus/hdd"
    },
    "disk#icon": {
        "format": "",
        "interval": "once",
        "tooltip": false
    },
    "custom/memory-icon": {
        "format": "",
        "interval": "once",
        "tooltip": false
    },
    "custom/separator": {
        //"format": "|",
        "format": " ",
        //"format": "⸺",
        "interval": "once",
        "tooltip": false
    },
    "custom/update": {
        "format": " {}",
        "interval": 3600,
        "exec-if": "[ $(checkupdates | wc -l) -ne 0 ]",
        "exec": "checkupdates | wc -l"
    }
}
#+end_src

*** waybar style

#+begin_src css :tangle no
,*{
    border: none;
    border-radius: 0;
    /* `otf-font-awesome` is required to be installed for icons */
    font-family: "JetBrains Mono", "Font Awesome 6 Free", "Font Awesome 6 Brands";
    /* font-family: monospace; */
    font-size: 14px;
    /* min-height: 0; */
    background-color: #282c34;
}

window#waybar {
    background-color: #282c34;
    transition-property: background-color;
    transition-duration: .5s;
}

#workspaces button {
    /* padding: 0 7px; */
    padding: 3px 0 3px 0;
    color: #e1d9c4;
}

/* https://github.com/Alexays/Waybar/wiki/FAQ#the-workspace-buttons-have-a-strange-hover-effect */
#workspaces button:hover {
    background: #282c34;
	box-shadow: inherit;
	text-shadow: inherit;
}

#workspaces button.focused {
	color: #bc8420;
}

#workspaces button.urgent {
    color: #eb4d4b;
}

#mode {
    background-color: #64727D;
}

#clock,
#battery,
#cpu,
#memory,
#disk,
#disk.hdd,
#temperature,
#network,
#pulseaudio,
#pulseaudio.output,
#pulseaudio.source,
#custom-media,
#custom-update,
#tray,
#mode,
#idle_inhibitor,
#language,
#mpd {
    /* padding: 0 7px; */
    padding: 0 1px;
    color: #e1d9c4;
    background-color: #282c34;
    font-size: 12px;
    /* margin-bottom: 10px; */
}

#clock.H,
#clock.a,
#clock.d {
    margin-bottom: 3px;
}

#clock.icon,
#clock.cal-icon,
#cpu.icon,
#memory.icon,
#disk.icon,
#temperature.icon,
#pulseaudio.output-icon,
#pulseaudio.source-icon {
    margin-bottom: 5px;
}

#window,
#workspaces {
    /* margin: 0 10px; */
    margin: 0 7px;
}

/* If workspaces is the leftmost module, omit left margin */
.modules-left > widget:first-child > #workspaces {
    margin-left: 0;
}

/* If workspaces is the rightmost module, omit right margin */
.modules-right > widget:last-child > #workspaces {
    margin-right: 0;
}

@keyframes blink {
    to {
        background-color: #ffffff;
        color: #000000;
    }
}

#temperature.critical {
    color: #f53c3c;
}

label:focus {
    background-color: #000000;
}

#tray > .needs-attention {
    -gtk-icon-effect: highlight;
    background-color: #eb4d4b;
}

#tray {
    margin-bottom: 5px;
}

#keyboard-state {
    padding: 0 0px;
    margin: 0 5px;
    min-width: 16px;
}

#keyboard-state > label {
    padding: 0 5px;
}

#keyboard-state > label.locked {
    background: rgba(0, 0, 0, 0.2);
}

#custom-separator {
    /* color: #e1d9c4; */
    background-color: #e1d9c4;
	box-shadow: 0px 0px 0px 8.5px #282c34 inset;
}
#+end_src

* Polybar
** config
*** colors

#+begin_src conf :tangle ~/.config/polybar/config.ini
[colors]
smoke-blue = #222d31
gruvbox = #282828
onedark = #282c34
yellow = #ffb52a
dark-yellow = #bc8420
light-yellow = #e1d9c4
light = #e1d9c4
light1 = #e5e9f0

background = ${colors.onedark}
background-alt = ${colors.onedark}
# foreground = #dfdfdf
foreground = ${colors.light-yellow}
foreground-alt = ${colors.light-yellow}
primary = #ffb52a
secondary = #e60053
alert = #bd2c40
#+end_src

*** bar/example

#+begin_src conf :tangle ~/.config/polybar/config.ini
[bar/example]
; monitor = ${env:MONITOR:HDMI-1}
; monitor = eDP
; monitor = HDMI-A-0
; monitor = VGA-1
; monitor = LVDS-1
width = 100%
height = 20
offset-x = 0
offset-y = 0
radius = 0
fixed-center = true

background = ${colors.background}
foreground = ${colors.foreground}

line-size = 0
line-color = #f00

border-size = 0
border-color = #00000000

padding-left = 1
padding-right = 1

module-margin-left = 1
module-margin-right = 1

font-0 = JetBrainsMono:style=Regular:size=9;3
font-1 = FontAwesome6Free:style=Solid:size=10;3
font-2 = FontAwesome6Brands:style=Solid:size=10;3

; modules-left = sep filesystem sep memory sep cpu sep eth sep temperature sep alsa sep
modules-left = sep filesystem sep memory sep cpu sep temperature sep alsa sep
modules-center = i3
; modules-center = bspwm
modules-right = sep xkeyboard sep battery date

tray-position = right
tray-padding = 1
;tray-background = #0063ff

; wm-restack = bspwm
wm-restack = i3

; override-redirect = true

;scroll-up = bspwm-desknext
;scroll-down = bspwm-deskprev

;scroll-up = i3wm-wsnext
;scroll-down = i3wm-wsprev

cursor-click = pointer
cursor-scroll = ns-resize
#+end_src

*** module/xwindow

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/xwindow]
type = internal/xwindow
label = %title:0:50:...%
format-foreground = #e1d9c4
#+end_src

*** module/xkeyboard

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/xkeyboard]
type = internal/xkeyboard
blacklist-0 = num lock

format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
;format-prefix-underline = ${colors.secondary}

label-layout = %layout%
;label-layout-underline = ${colors.secondary}

label-indicator-padding = 2
label-indicator-margin = 1
label-indicator-background = ${colors.secondary}
;label-indicator-underline = ${colors.secondary}
label-indicator-foreground = ${colors.foreground-alt}
#+end_src

*** module/filesystem

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/filesystem]
type = internal/fs
interval = 25

mount-0 = /
;mount-1 = /media/solus/hdd
;for arch
; mount-1 = /run/media/solus/hdd

label-mounted =  %free%
label-unmounted = %mountpoint% not mounted
label-unmounted-foreground = ${colors.foreground-alt}
label-mounted-foreground = ${colors.foreground-alt}
#+end_src

*** module/bspwm

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/bspwm]
type = internal/bspwm

; label-focused = %name%
; label-focused-background = ${colors.background-alt}
; label-focused-underline= ${colors.primary}
; label-focused-padding = 3

; ; label-occupied = %index%
; label-occupied = %name%
; label-occupied-padding = 3

; label-urgent = %name%
; label-urgent-background = ${colors.alert}
; label-urgent-padding = 3

; label-empty = %name%
; label-empty-foreground = ${colors.foreground-alt}
; label-empty-padding = 3

; Separator in between workspaces
; label-separator = |


label-focused = %name%
label-focused-foreground = ${colors.dark-yellow}
label-focused-padding = 2

; label-occupied = %index%
label-occupied = %name%
label-occupied-padding = 2
label-occupied-foreground = ${colors.foreground-alt}

label-urgent = %name%
label-urgent-background = ${colors.alert}
label-urgent-padding = 2

label-empty =
label-empty-foreground = ${colors.foreground-alt}
label-empty-padding = 2
#+end_src

*** module/i3

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/i3]
type = internal/i3

;ws-icon-0 = 1;
;ws-icon-1 = 2;/
;ws-icon-2 = 3;/
;ws-icon-3 = 4;/
;ws-icon-4 = 5;/
;ws-icon-1 = 2;
; 
;ws-icon-1 = 2;

ws-icon-0 = 1;
ws-icon-1 = 2;
ws-icon-2 = 3;
ws-icon-3 = 4;
ws-icon-4 = 5;

; 
; 
ws-icon-5 = 6;
ws-icon-6 = 7;
ws-icon-7 = 8;

format = <label-state> <label-mode>
index-sort = true
wrapping-scroll = false

; Only show workspaces on the same output as the bar
;pin-workspaces = true

label-mode-padding = 2
label-mode-foreground = #000
label-mode-background = ${colors.primary}

; focused = Active workspace on focused monitor
label-focused = %icon%
label-focused-background = ${module/bspwm.label-focused-background}
label-focused-underline = ${module/bspwm.label-focused-underline}
label-focused-padding = ${module/bspwm.label-focused-padding}
label-focused-foreground = ${colors.dark-yellow}

; unfocused = Inactive workspace on any monitor
label-unfocused = %icon%
label-unfocused-padding = ${module/bspwm.label-occupied-padding}
label-unfocused-foreground = ${colors.foreground-alt}

; visible = Active workspace on unfocused monitor
label-visible = %icon%
label-visible-background = ${self.label-focused-background}
label-visible-underline = ${self.label-focused-underline}
label-visible-padding = ${self.label-focused-padding}

; urgent = Workspace with urgency hint set
label-urgent = %icon%
label-urgent-background = ${module/bspwm.label-urgent-background}
label-urgent-padding = ${module/bspwm.label-urgent-padding}

; Separator in between workspaces
; label-separator = |
#+end_src

*** module/mpd

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/mpd]
type = internal/mpd
format-online = <label-song>  <icon-prev> <icon-stop> <toggle> <icon-next>

icon-prev = 
icon-stop = 
icon-play = 
icon-pause = 
icon-next = 

label-song-maxlen = 25
label-song-ellipsis = true
#+end_src

*** module/xbacklight

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/xbacklight]
type = internal/xbacklight

format = <label> <bar>
label = BL %percentage%%

bar-width = 10
bar-indicator = |
bar-indicator-foreground = #fff
bar-indicator-font = 2
bar-fill = ─
bar-fill-font = 2
bar-fill-foreground = #9f78e1
bar-empty = ─
bar-empty-font = 2
bar-empty-foreground = ${colors.foreground-alt}
#+end_src

*** module/backlight-acpi

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/backlight-acpi]
inherit = module/xbacklight
type = internal/backlight
card = intel_backlight
#+end_src

*** module/cpu

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/cpu]
type = internal/cpu
interval = 2
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
label-foreground = ${colors.foreground-alt}
;format-underline = #f90000
label = %percentage:2%%
#+end_src

*** module/memory

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/memory]
type = internal/memory
interval = 3
format-prefix = " "
format-prefix-foreground = ${colors.foreground-alt}
label-foreground = ${colors.foreground-alt}
;format-underline = #4bffdc
label = %gb_used%
#+end_src

*** module/wlan

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/wlan]
type = internal/network
interface = net1
interval = 3.0

format-connected = <ramp-signal> <label-connected>
format-connected-underline = #9f78e1
label-connected = %essid%

format-disconnected =
;format-disconnected = <label-disconnected>
;format-disconnected-underline = ${self.format-connected-underline}
;label-disconnected = %ifname% disconnected
;label-disconnected-foreground = ${colors.foreground-alt}

ramp-signal-0 = 
ramp-signal-1 = 
ramp-signal-2 = 
ramp-signal-3 = 
ramp-signal-4 = 
ramp-signal-foreground = ${colors.foreground-alt}
#+end_src

*** module/eth

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/eth]
; type = internal/network
; interface = enp3s0
; interval = 3.0

; ;format-connected-underline = #55aa55
; format-connected-prefix = ""
; format-connected-prefix-foreground = ${colors.foreground-alt}
; label-connected =

; ;format-disconnected =
; format-disconnected = <label-disconnected>
; ;format-disconnected-underline = ${self.format-connected-underline}
; label-disconnected = %ifname% disconnected
; ;label-disconnected-foreground = ${colors.foreground-alt}

type = internal/network
; Name of the network interface to display. You can get the names of the
; interfaces on your machine with `ip link`
; Wireless interfaces often start with `wl` and ethernet interface with `eno` or `eth`
interface = eno1

; If no interface is specified, polybar can detect an interface of the given type.
; If multiple are found, it will prefer running interfaces and otherwise just
; use the first one found.
; Either 'wired' or 'wireless'
; New in version 3.6.0
interface-type = wired

; Seconds to sleep between updates
; Default: 1
interval = 3.0

; NOTE: Experimental (might change or be removed in the future)
; Test connectivity every Nth update by pinging 8.8.8.8
; In case the ping fails 'format-packetloss' is used until the next ping
; A value of 0 disables the feature
; Default: 0
;ping-interval = 3

; @deprecated: Define min width using token specifiers (%downspeed:min% and %upspeed:min%)
; Minimum output width of upload/download rate
; Default: 3
udspeed-minwidth = 5

; Accumulate values from all interfaces
; when querying for up/downspeed rate
; Default: false
accumulate-stats = true

; Consider an `UNKNOWN` interface state as up.
; Some devices like USB network adapters have
; an unknown state, even when they're running
; Default: false
unknown-as-up = true

; The unit used for displaying network speeds
; For example if set to the empty string, a speed of 5 KB/s is displayed as 5 K
; Default: B/s
; New in version 3.6.0
speed-unit = ''

; Available tags:
;   <label-connected> (default)
;   <ramp-signal>
format-connected = <ramp-signal> <label-connected>

; Available tags:
;   <label-disconnected> (default)
format-disconnected = <label-disconnected>

; Used when connected, but ping fails (see ping-interval)
; Available tags:
;   <label-connected> (default)
;   <label-packetloss>
;   <animation-packetloss>
format-packetloss = <animation-packetloss> <label-connected>

; All labels support the following tokens:
;   %ifname%    [wireless+wired]
;   %local_ip%  [wireless+wired]
;   %local_ip6% [wireless+wired]
;   %essid%     [wireless]
;   %signal%    [wireless]
;   %upspeed%   [wireless+wired]
;   %downspeed% [wireless+wired]
;   %netspeed%  [wireless+wired] (%upspeed% + %downspeed%) (New in version 3.6.0)
;   %linkspeed% [wired]
;   %mac%       [wireless+wired] (New in version 3.6.0)

; Default: %ifname% %local_ip%
label-connected = %linkspeed% %downspeed:9%
label-connected-foreground = #eefafa

; Default: (none)
label-disconnected = not connected
label-disconnected-foreground = #66ffff

; Default: (none)
;label-packetloss = %essid%
;label-packetloss-foreground = #eefafafa

; Only applies if <ramp-signal> is used
ramp-signal-0 = 😱
ramp-signal-1 = 😠
ramp-signal-2 = 😒
ramp-signal-3 = 😊
ramp-signal-4 = 😃
ramp-signal-5 = 😈

; Only applies if <animation-packetloss> is used
animation-packetloss-0 = ⚠
animation-packetloss-0-foreground = #ffa64c
animation-packetloss-1 = 📶
animation-packetloss-1-foreground = #000000
; Framerate in milliseconds
animation-packetloss-framerate = 500
#+end_src

*** module/date

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/date]
type = internal/date
interval = 5

date = |    %A, %d %B
date-alt = " %Y-%m-%d"

;time = |   %l:%M %P  |
time = |   %H:%M  |
time-alt = %H:%M:%S

format-prefix = 
format-prefix-foreground = ${colors.foreground-alt}
label-foreground = ${colors.foreground-alt}
;format-underline = #0a6cf5
label = %date% %time%
#+end_src

*** module/pulseaudio

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/pulseaudio]
type = internal/pulseaudio

format-volume = <label-volume> <bar-volume>
label-volume = VOL %percentage%%
label-volume-foreground = ${root.foreground}

label-muted = 🔇 muted
label-muted-foreground = #666

bar-volume-width = 10
bar-volume-foreground-0 = #55aa55
bar-volume-foreground-1 = #55aa55
bar-volume-foreground-2 = #55aa55
bar-volume-foreground-3 = #55aa55
bar-volume-foreground-4 = #55aa55
bar-volume-foreground-5 = #f5a70a
bar-volume-foreground-6 = #ff5555
bar-volume-gradient = false
bar-volume-indicator = |
bar-volume-indicator-font = 2
bar-volume-fill = ─
bar-volume-fill-font = 2
bar-volume-empty = ─
bar-volume-empty-font = 2
bar-volume-empty-foreground = ${colors.foreground-alt}
#+end_src

*** module/alsa

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/alsa]
type = internal/alsa

;format-volume = <label-volume> <bar-volume>
format-volume = <label-volume>
label-volume =  %percentage%%
label-volume-foreground = ${colors.foreground-alt}

format-muted-prefix = " "
format-muted-foreground = ${colors.foreground-alt}
label-muted = 

bar-volume-width = 10
bar-volume-foreground-0 = #55aa55
bar-volume-foreground-1 = #55aa55
bar-volume-foreground-2 = #55aa55
bar-volume-foreground-3 = #55aa55
bar-volume-foreground-4 = #55aa55
bar-volume-foreground-5 = #f5a70a
bar-volume-foreground-6 = #ff5555
bar-volume-gradient = false
bar-volume-indicator = |
bar-volume-indicator-font = 2
bar-volume-fill = ─
bar-volume-fill-font = 2
bar-volume-empty = ─
bar-volume-empty-font = 2
bar-volume-empty-foreground = ${colors.foreground-alt}
#+end_src

*** module/battery

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
; Default: 100
full-at = 99

; format-low once this charge percentage is reached
; Default: 10
; New in version 3.6.0
low-at = 5

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT0
adapter = ACAD
; adapter = ADP1

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = 5

; see "man date" for details on how to format the time string
; NOTE: if you want to use syntax tags here you need to use %%{...}
; Default: %H:%M:%S
time-format = %H:%M

; Available tags:
;   <label-charging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-charging>
format-charging = <animation-charging> <label-charging>

; Available tags:
;   <label-discharging> (default)
;   <bar-capacity>
;   <ramp-capacity>
;   <animation-discharging>
format-discharging = <ramp-capacity> <label-discharging>

; Available tags:
;   <label-full> (default)
;   <bar-capacity>
;   <ramp-capacity>
;format-full = <ramp-capacity> <label-full>

; Format used when battery level drops to low-at
; If not defined, format-discharging is used instead.
; Available tags:
;   <label-low>
;   <animation-low>
;   <bar-capacity>
;   <ramp-capacity>
; New in version 3.6.0
;format-low = <label-low> <animation-low>

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current charge rate in watts)
; label-charging = Charging %percentage%%
label-charging =  %percentage%%

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current discharge rate in watts)
; label-discharging = Discharging %percentage%%
label-discharging = %percentage%%

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
label-full = Charged

; Available tokens:
;   %percentage% (default) - is set to 100 if full-at is reached
;   %percentage_raw%
;   %time%
;   %consumption% (shows current discharge rate in watts)
; New in version 3.6.0
label-low = BATTERY LOW

; Only applies if <ramp-capacity> is used
ramp-capacity-0 = 
ramp-capacity-1 = 
ramp-capacity-2 = 
ramp-capacity-3 = 
ramp-capacity-4 = 

; Only applies if <bar-capacity> is used
bar-capacity-width = 10

; Only applies if <animation-charging> is used
animation-charging-0 = 
animation-charging-1 = 
animation-charging-2 = 
animation-charging-3 = 
animation-charging-4 = 
; Framerate in milliseconds
animation-charging-framerate = 750

; Only applies if <animation-discharging> is used
animation-discharging-0 = 
animation-discharging-1 = 
animation-discharging-2 = 
animation-discharging-3 = 
animation-discharging-4 = 
; Framerate in milliseconds
animation-discharging-framerate = 500

; Only applies if <animation-low> is used
; New in version 3.6.0
animation-low-0 = !
animation-low-1 =
animation-low-framerate = 200
#+end_src

*** module/temperature

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/temperature]
type = internal/temperature
thermal-zone = 0
; hwmon-path = /sys/devices/platform/coretemp.0/hwmon/hwmon1/temp1_input
; hwmon-path = /sys/devices/platform/thinkpad_hwmon/hwmon/hwmon5/temp1_input
hwmon-path = /sys/class/thermal/thermal_zone0/temp
warn-temperature = 60


format-prefix = ""
format = <ramp> <label>
;format-underline = #f50a4d
format-warn = <ramp> <label-warn>
;format-warn-underline = ${self.format-underline}

label = %temperature-c%
label-warn = %temperature-c%
label-warn-foreground = ${colors.secondary}

format-prefix-foreground = ${colors.foreground-alt}
label-foreground = ${colors.foreground-alt}

ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-foreground = ${colors.foreground-alt}
#+end_src

*** module/powermenu

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/powermenu]
type = custom/menu

expand-right = true

format-spacing = 1

label-open = 
label-open-foreground = ${colors.secondary}
label-close =  cancel
label-close-foreground = ${colors.secondary}
label-separator = |
label-separator-foreground = ${colors.foreground-alt}

menu-0-0 = reboot
menu-0-0-exec = menu-open-1
menu-0-1 = power off
menu-0-1-exec = menu-open-2

menu-1-0 = cancel
menu-1-0-exec = menu-open-0
menu-1-1 = reboot
menu-1-1-exec = sudo reboot

menu-2-0 = power off
menu-2-0-exec = sudo poweroff
menu-2-1 = cancel
menu-2-1-exec = menu-open-0
#+end_src

*** settings

#+begin_src conf :tangle ~/.config/polybar/config.ini
[settings]
screenchange-reload = true
;compositing-background = xor
;compositing-background = screen
;compositing-foreground = source
;compositing-border = over
;pseudo-transparency = false
#+end_src

*** global/wm

#+begin_src conf :tangle ~/.config/polybar/config.ini
[global/wm]
margin-top = 0
margin-bottom = 0
#+end_src

*** module/check-updates

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/check-updates]
type = custom/script
exec = sh ~/.config/polybar/check-updates.sh
interval = 3600
#+end_src

*** module/sep

#+begin_src conf :tangle ~/.config/polybar/config.ini
[module/sep]
type = custom/text
content = |
label-separator-foreground = ${colors.foreground-alt}
#+end_src

** polybar.sh

Set :tangle ~/.config/polybar/polybar.sh only after edit and when first installation system
By default :tangle no

#+begin_src sh :tangle no
#!/usr/bin/env bash

# Terminate already running bar instances
killall -q polybar

# Launch Polybar, using default config location ~/.config/polybar/config.ini
polybar --config=$HOME/.config/polybar/config.ini example 2>&1 | tee -a /tmp/polybar.log & disown

echo "Polybar launched..."
#+end_src

* Picom

#+begin_src conf :tangle ~/.config/picom.conf
transition-length = 300
transition-pow-x = 0.1
transition-pow-y = 0.1
transition-pow-w = 0.1
transition-pow-h = 0.1
size-transition = true

corner-radius = 12;
rounded-corners-exclude = [
  "window_type = 'dock'",
  "class_g = 'Dunst'"
];
round-borders = 10;
round-borders-exclude = [
  # "class_g = 'TelegramDesktop'",
];

shadow = true;
shadow-radius = 10;
shadow-opacity = 0.85
shadow-offset-x = -7;
shadow-offset-y = -7;
shadow-exclude = [
  #"name = 'Notification'",
  #"_GTK_FRAME_EXTENTS@:c"
];

fading = true;
fade-in-step = 1.325;
fade-out-step = 1.325;
fade-delta = 18
fade-exclude = [
  #"class_g = 'slop'"
]

inactive-opacity = 1
frame-opacity = 1
popup_menu = { opacity = 1; }
dropdown_menu = { opacity = 1; }
inactive-opacity-override = false;
active-opacity = 1;
focus-exclude = [
  #"class_g = 'Bar'",                    # lemonbar
];
opacity-rule = [
  # "100:window_type = 'normal'",
  # "100:class_g    = 'firefox'",
  # "100:class_g    = 'discord'",
  # "100:class_g    = 'mpv'",
  # "100:class_g    = 'Gimp'",

  # "100:_NET_WM_STATE@[0]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[1]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[2]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[3]:32a = '_NET_WM_STATE_FULLSCREEN'",
  # "100:_NET_WM_STATE@[4]:32a = '_NET_WM_STATE_FULLSCREEN'"
];

# blur: {
#   method = "kawase";
#   strength = 5;
#   background = false;
#   background-frame = false;
#   background-fixed = false;
#   kern = "3x3box";
# }

# Exclude conditions for background blur.
blur-background-exclude = [
  #"window_type = 'dock'",
  #"window_type = 'desktop'",
  "class_g = 'GLava'",
  "_GTK_FRAME_EXTENTS@:c"
];

daemon = true;
backend = "glx";
#backend = "xrender";
vsync = true
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = false;
detect-transient = true
detect-client-leader = false
use-damage = false
log-level = "info";

wintypes:
{
  normal = { fade = false; shadow = false; opacity = 1; }
  tooltip = { fade = false; shadow = false; opacity = .95; focus = true; full-shadow = true; };
  dock = { shadow = false; fade = false; opacity = .95; }
  dnd = { shadow = false; fade = false; opacity = .95; }
  popup_menu = { opacity = 1; }
  dropdown_menu = { opacity = .95; }
};
#+end_src

* Mpv
** mpv config

#+begin_src conf :tangle ~/.config/mpv/config
save-position-on-quit=yes
fullscreen=no
hwdec=vdpau
sub-codepage=enca:ru:utf8
profile=opengl-hq
#+end_src

** mpv input

#+begin_src conf :tangle ~/.config/mpv/input.conf
UP    add volume  1
DOWN  add volume -1

n playlist-next
< playlist-prev

9 seek -60
0 seek 60

# switch audio streams
l cycle audio             

# toggle fullscreen
ENTER cycle fullscreen
#+end_src

* Zsh
** zshrc
*** Common Settings

#+begin_src sh :tangle ~/.zshrc
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
#+end_src

*** Custom

#+begin_src sh :tangle ~/.zshrc
# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM="$HOME/.oh-my-zsh/custom"
ZSH_THEME="wezm"
#+end_src

*** Plugins

#+begin_src sh :tangle ~/.zshrc
# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
	git
	zsh-syntax-highlighting
	history-substring-search
	zsh-autosuggestions
	poetry
)
#+end_src

*** User configuration

#+begin_src sh :tangle ~/.zshrc

source $ZSH/oh-my-zsh.sh

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
# 	export EDITOR='vim'
# else
# 	export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"
#+end_src

*** Aliases
**** Common

#+begin_src sh :tangle ~/.zshrc
alias c='clear'

alias q='exit'

alias t='touch'
alias mk='mkdir'

alias rb='reboot'
alias sdn='shutdown now'
alias sdh='shutdown -h'
alias sdc='shutdown -c'
alias sn='sleep 60 && shutdown now'

alias ss='systemctl suspend'
# 3600 == one hour
alias s30='sleep 1800 && systemctl suspend'
alias s45='sleep 2700 && systemctl suspend'
alias s1='sleep 3600 && systemctl suspend'
alias s2='sleep 7200 && systemctl suspend'
alias s3='sleep 10800 && systemctl suspend'
#+end_src

**** Arch

#+begin_src sh :tangle ~/.zshrc
alias i='sudo pacman -S'
alias remove='sudo pacman -Rs'
# alias upd='sudo pacman -Syu && yay -Sua'
alias upd='sudo pacman -Syu'
alias yupd='yay -Syu'
alias cl='sudo pacman -Scc'
#+end_src

**** Debian based

#+begin_src sh :tangle no
alias i='sudo apt install'
alias remove='sudo apt remove'
alias purge='sudo apt purge'
alias autoremove='sudo apt autoremove && sudo apt --purge autoremove'
alias upd='sudo apt update && sudo apt full-upgrade && sudo snap refresh'
alias cl='sudo apt autoclean && sudo apt clean'
#+end_src

**** Python

#+begin_src sh :tangle ~/.zshrc
alias py='python3'

# pyenv
alias pp='pyenv activate python-pyenv'

#ipython
# alias ipy='ipython'
alias ipy='python3 -m IPython'
# alias ipy='pyenv activate python-pyenv && ipython'

# poetry
alias rmp='rm -rf `poetry env info -p`'

# django
alias dsp='django-admin startproject'
alias dsa='python manage.py startapp'
alias drs='python manage.py runserver'
alias dm='python manage.py migrate'
alias dmm='python manage.py makemigrations'
alias ds='python manage.py shell'
#+end_src

**** Git

#+begin_src sh :tangle ~/.zshrc
alias gts='git status'
alias gta='git add .'
alias gtc='git commit -m'
alias gtp='git push origin'
#+end_src

*** Exports

#+begin_src sh :tangle ~/.zshrc
export TERM=xterm-256color

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
	eval "$(pyenv init --path)"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# turf off highlighting directories are writable by other
export LS_COLORS="$LS_COLORS:ow=1;34:tw=1;34:"

export VISUAL="nvim"
export EDITOR="nvim"
#export TERMINAL="alacritty"

export NNN_FIFO="/tmp/nnn.fifo"
export NNN_PLUG="p:preview-tui-ext;i:imgview;o:fzopen;"
export NNN_BMS="D:~/Downloads/;d:~/Dev/;v:/run/media/solus/hdd/Videos/;u:/run/media/solus/hdd/;"
export NNN_COLORS="6125"
#export NNN_COLORS="c136"

# poetry
export PATH="$HOME/.local/bin:$PATH"

# Java
export JAVA_HOME="/usr/lib/jvm/java-17-openjdk"
# export JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
# export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64"
export PATH="$JAVA_HOME/bin:$PATH"

export PATH=$HOME/.cask/bin:$PATH
#+end_src

** zsh-theme

#+begin_src conf :tangle ~/.oh-my-zsh/custom/themes/wezm.zsh-theme
PROMPT='$(git_prompt_info)%(?,,%{${fg_bold[white]}%}[%?]%{$reset_color%} )%{$fg[yellow]%}>%{$reset_color%} '
RPROMPT='%{$fg[green]%}%~%{$reset_color%}'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[blue]%}("
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[blue]%})%{$fg[red]%}⚡%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[blue]%})"
#+end_src

** zshenv

#+begin_src sh :tangle ~/.zshenv
# if [ "$(tty)" = "/dev/tty1" ]; then
#     #unset DISPLAY
# # if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
# 	exec sway
# fi

# export _JAVA_AWT_WM_NONREPARENTING=1

. "$HOME/.cargo/env"
#+end_src

* Fish

#+begin_src conf :tangle ~/.config/fish/config.fish
if status is-interactive
    # Commands to run in interactive sessions can go here
end

# pyenv init - | source
#+end_src

** Aliases
*** Common

#+begin_src sh :tangle ~/.config/fish/config.fish
alias c='clear'

alias q='exit'

alias t='touch'
alias mk='mkdir'

alias rb='reboot'
alias sdn='shutdown now'
alias sdh='shutdown -h'
alias sdc='shutdown -c'
alias sn='sleep 60 && shutdown now'

alias ss='systemctl suspend'
# 3600 == one hour
alias s30='sleep 1800 && systemctl suspend'
alias s45='sleep 2700 && systemctl suspend'
alias s1='sleep 3600 && systemctl suspend'
alias s2='sleep 7200 && systemctl suspend'
alias s3='sleep 10800 && systemctl suspend'
#+end_src

*** Arch

#+begin_src sh :tangle ~/.config/fish/config.fish
alias i='sudo pacman -S'
alias remove='sudo pacman -Rs'
# alias upd='sudo pacman -Syu && yay -Sua'
alias upd='sudo pacman -Syu'
alias yupd='yay -Syu'
alias cl='sudo pacman -Scc'
#+end_src

*** Git

#+begin_src sh :tangle ~/.config/fish/config.fish
alias gts='git status'
alias gta='git add .'
alias gtc='git commit -m'
alias gtp='git push origin'
#+end_src

* Rofi
** config

#+begin_src conf :tangle ~/.config/rofi/config.rasi
/*****----- Configuration -----*****/
configuration {
	modi:                       "drun";
    show-icons:                 false;
    display-drun:               "";
    display-run:                "";
    display-filebrowser:        "";
    display-window:             "";
	drun-display-format:        "{name} [<span weight='light' size='small'><i>({generic})</i></span>]";
	window-format:              "{w} · {c} · {t}";
}

/*****----- Global Properties -----*****/
@import                          "colors.rasi"
@import                          "fonts.rasi"

*{
    border-colour:               var(selected);
    handle-colour:               var(selected);
    background-colour:           var(background);
    foreground-colour:           var(foreground);
    alternate-background:        var(background-alt);
    normal-background:           var(background);
    normal-foreground:           var(foreground);
    urgent-background:           var(urgent);
    urgent-foreground:           var(background);
    active-background:           var(active);
    active-foreground:           var(background);
    selected-normal-background:  var(selected);
    selected-normal-foreground:  var(background);
    selected-urgent-background:  var(active);
    selected-urgent-foreground:  var(background);
    selected-active-background:  var(urgent);
    selected-active-foreground:  var(background);
    alternate-normal-background: var(background);
    alternate-normal-foreground: var(foreground);
    alternate-urgent-background: var(urgent);
    alternate-urgent-foreground: var(background);
    alternate-active-background: var(active);
    alternate-active-foreground: var(background);
}

/*****----- Main Window -----*****/
window {
    /* properties for window widget */
    transparency:                "real";
    location:                    center;
    anchor:                      center;
    fullscreen:                  false;
    width:                       600px;
    x-offset:                    0px;
    y-offset:                    0px;

    /* properties for all widgets */
    enabled:                     true;
    margin:                      0px;
    padding:                     0px;
    /* border:                      1px solid; */
    border:                      0px;
    border-radius:               0px;
    border-color:                @border-colour;
    cursor:                      "default";
    background-color:            @background-colour;
}

/*****----- Main Box -----*****/
mainbox {
    enabled:                     true;
    spacing:                     5px;
    margin:                      0px;
    padding:                     5px;
    border:                      0px solid;
    border-radius:               0px 0px 0px 0px;
    border-color:                @border-colour;
    background-color:            transparent;
    children:                    [ "inputbar", "listview" ];
}

/*****----- Inputbar -----*****/
inputbar {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     5px;
    border:                      0px 0px 1px dash 0px;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            @background-colour;
    text-color:                  @foreground-colour;
    children:                    [ "prompt", "entry" ];
}

prompt {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
}
textbox-prompt-colon {
    enabled:                     true;
    expand:                      false;
    str:                         "::";
    background-color:            inherit;
    text-color:                  inherit;
}
entry {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
    cursor:                      text;
    placeholder:                 "Search...";
    placeholder-color:           inherit;
}

/*****----- Listview -----*****/
listview {
    enabled:                     true;
    columns:                     1;
    lines:                       12;
    cycle:                       true;
    dynamic:                     true;
    scrollbar:                   false;
    layout:                      vertical;
    reverse:                     false;
    fixed-height:                true;
    fixed-columns:               true;

    spacing:                     0px;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
    cursor:                      "default";
}
scrollbar {
    handle-width:                5px ;
    handle-color:                @handle-colour;
    border-radius:               0px;
    background-color:            @alternate-background;
}

/*****----- Elements -----*****/
element {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     5px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
    cursor:                      pointer;
}
element normal.normal {
    background-color:            var(normal-background);
    text-color:                  var(normal-foreground);
}
element normal.urgent {
    background-color:            var(urgent-background);
    text-color:                  var(urgent-foreground);
}
element normal.active {
    background-color:            var(active-background);
    text-color:                  var(active-foreground);
}
element selected.normal {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}
element selected.urgent {
    background-color:            var(selected-urgent-background);
    text-color:                  var(selected-urgent-foreground);
}
element selected.active {
    background-color:            var(selected-active-background);
    text-color:                  var(selected-active-foreground);
}
element alternate.normal {
    background-color:            var(alternate-normal-background);
    text-color:                  var(alternate-normal-foreground);
}
element alternate.urgent {
    background-color:            var(alternate-urgent-background);
    text-color:                  var(alternate-urgent-foreground);
}
element alternate.active {
    background-color:            var(alternate-active-background);
    text-color:                  var(alternate-active-foreground);
}
element-icon {
    background-color:            transparent;
    text-color:                  inherit;
    size:                        24px;
    cursor:                      inherit;
}
element-text {
    background-color:            transparent;
    text-color:                  inherit;
    highlight:                   inherit;
    cursor:                      inherit;
    vertical-align:              0.5;
    horizontal-align:            0.0;
}

/*****----- Mode Switcher -----*****/
mode-switcher{
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
}
button {
    padding:                     10px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  inherit;
    cursor:                      pointer;
}
button selected {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}

/*****----- Message -----*****/
message {
    enabled:                     true;
    margin:                      0px;
    padding:                     0px;
    border:                      0px solid;
    border-radius:               0px 0px 0px 0px;
    border-color:                @border-colour;
    background-color:            transparent;
    text-color:                  @foreground-colour;
}
textbox {
    padding:                     5px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            @alternate-background;
    text-color:                  @foreground-colour;
    vertical-align:              0.5;
    horizontal-align:            0.0;
    highlight:                   none;
    placeholder-color:           @foreground-colour;
    blink:                       true;
    markup:                      true;
}
error-message {
    padding:                     5px;
    border:                      0px solid;
    border-radius:               0px;
    border-color:                @border-colour;
    background-color:            @background-colour;
    text-color:                  @foreground-colour;
}
#+end_src

** colors

#+begin_src conf :tangle ~/.config/rofi/colors.rasi
*{
    background:     #1E2127FF;
    background-alt: #282B31FF;
    foreground:     #FFFFFFFF;
    selected:       #61AFEFFF;
    selected-alt:   #34A2EB;
    active:         #98C379FF;
    urgent:         #E06C75FF;
}
#+end_src

** fonts

#+begin_src conf :tangle ~/.config/rofi/fonts.rasi
*{
    font: "JetBrains Mone 10";
}
#+end_src

* Terminal
** Alacritty

#+begin_src yaml :tangle ~/.config/alacritty.yml
scrolling:
  history: 10000

font:
  normal:
    family: JetBrains Mono
  size: 9.5
  #size: 6

colors:
  primary:
    background: '#282c34'
    foreground: '#d8d8d8'

  cursor:
    text: '#000000'
    cursor: '#1ABB9B'

  selection:
    text: CellBackground
    background: CellForeground

  search:
    matches:
      foreground: '#000000'
      background: '#ffffff'

    footer_bar:
      background: '#c5c8c6'
      foreground: '#1d1f21'

  # Normal colors
  normal:
    black:   '#1d1f21'
    #red:     '#cc6666'
    #green:   '#b5bd68'
    red:     '#ef5240'
    green:   '#fabd2f'
    yellow:  '#f0c674'
    blue:    '#81a2be'
    magenta: '#b294bb'
    cyan:    '#8abeb7'
    white:   '#c5c8c6'

  # Bright colors
  bright:
    black:   '#666666'
    red:     '#d54e53'
    green:   '#b9ca4a'
    yellow:  '#e7c547'
    blue:    '#7aa6da'
    magenta: '#c397d8'
    cyan:    '#70c0b1'
    white:   '#eaeaea'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  dim:
    black:   '#131415'
    red:     '#864343'
    green:   '#777c44'
    yellow:  '#9e824c'
    blue:    '#556a7d'
    magenta: '#75617b'
    cyan:    '#5b7d78'
    white:   '#828482'

window:
  opacity: 0.95
#+end_src

* Ideavimrc
** General

#+begin_src vimrc :tangle ~/.ideavimrc
set ideajoin
set number relativenumber

" <SPC> as the leader key
let mapleader = " "

" Use the clipboard register '*' for all yank, delete, change and put operations
" which would normally go to the unnamed register.
set clipboard+=unnamed

" Search as characters are entered
set incsearch

" Highlight search results
set hlsearch

" If a pattern contains an uppercase letter, searching is case sensitive,
" otherwise, it is not.
set ignorecase
set smartcase

" Emulate vim-surround. Commands: ys, cs, ds, S.
set surround
#+end_src

** Buffers

#+begin_src vimrc :tangle ~/.ideavimrc
"switch to last buffer
nnoremap <leader>bl <C-S-6>

"next buffer
nnoremap <leader>bn :action NextTab<CR>

"previous buffer
nnoremap <leader>bp :action PreviousTab<CR>

"kill buffer
nnoremap <leader>bd :action CloseContent<CR>

"kill buffer and close window
nnoremap <leader>bk :action CloseAllEditors<CR>

"kill other buffers
nnoremap <leader>bD :action CloseAllEditorsButActive<CR>
#+end_src

** Code

#+begin_src vimrc :tangle ~/.ideavimrc
"override method
nnoremap <leader>co :action OverrideMethods<CR>

"reformat code
nnoremap <leader>cr :action ReformatCode<CR>

nnoremap <leader>civ :action IntroduceVariable<CR>
#+end_src

*** Comments

#+begin_src vimrc :tangle ~/.ideavimrc
"collapse region
nnoremap <leader>ccr :action CollapseRegion<CR>

"expand region
nnoremap <leader>cce :action ExpandRegion<CR>
#+end_src

*** Generate

#+begin_src vimrc :tangle ~/.ideavimrc
"generate constructor
nnoremap <leader>cgc :action GenerateEquals<CR>

"generate getter
nnoremap <leader>cgg :action GenerateGetter<CR>

"generate setter and getter
nnoremap <leader>cgs :action GenerateSetter<CR>

"generate equals
nnoremap <leader>cge :action GenerateEquals<CR>

"generate javadoc
nnoremap <leader>cgd :action GenerateJavadoc<CR>
#+end_src

*** Jump

#+begin_src vimrc :tangle ~/.ideavimrc
"to last change
nnoremap <leader>cjc :action JumpToLastChange<CR>

"to last window
nnoremap <leader>cjw :action JumpToLastWindow<CR>
#+end_src

*** Quick Actions

#+begin_src vimrc :tangle ~/.ideavimrc
"quick actions
nnoremap <leader>caq :action QuickActions<CR>

"quick java doc
nnoremap <leader>caj :action QuickJavaDoc<CR>
#+end_src

** Debugging

#+begin_src vimrc :tangle ~/.ideavimrc
"toggle line breakpoint
nnoremap <leader>db :action ToggleLineBreakpoint<CR>

"toggle between impl and test file
nnoremap <leader>di :action GotoTest<CR>
#+end_src

** Files

#+begin_src vimrc :tangle ~/.ideavimrc
"find file
nnoremap <leader>fg :action GotoFile<CR>

"rename file
nnoremap <leader>fR :action RenameFile<CR>

"recent file
nnoremap <leader>fr :action RecentFiles<CR>
#+end_src

*** Open

#+begin_src vimrc :tangle ~/.ideavimrc
"fom file menu
nnoremap <leader>fom :action FileMenu<CR>

"open file
nnoremap <leader>fo :action OpenFile<CR>

"open in browser
nnoremap <leader>fob :action OpenInBrowser<CR>
#+end_src

** Projects

#+begin_src vimrc :tangle ~/.ideavimrc
"new dir
nnoremap <leader>pd :action NewDir<CR>

"next project window
nnoremap <leader>pn :action NextProjectWindow<CR>

"previous project window
nnoremap <leader>pp :action PreviousProjectWindow<CR>

"close project
nnoremap <leader>pc :action CloseProject<CR>
#+end_src

** Toggle/Open

#+begin_src vimrc :tangle ~/.ideavimrc
"open new terminal
nnoremap <leader>ttn :action Terminal.OpenInTerminal<CR>

"activate terminal
nnoremap <leader>tto :action ActivateTerminalToolWindow<CR>

" Focus on project window.
" Sadly when you are inside the project window this key binding does not work
" anymore. You can use <A-1> if you want to close the window or <Esc> if you
" want to leave the window opened and focus on the code.
"project tool window
nnoremap <leader>tp :action ActivateProjectToolWindow<CR>

nnoremap <leader>tdm : action ToggleDistractionFreeMode<CR>
#+end_src

** Run

#+begin_src vimrc :tangle ~/.ideavimrc
"run menu
nnoremap <leader>rm :action RunMenu<CR>

"run
nnoremap <leader>rr :action Run<CR>

"run java class
nnoremap <leader>rc :action RunClass<CR>
#+end_src

** Search

#+begin_src vimrc :tangle ~/.ideavimrc
"clear highlight
nnoremap <leader>sc :nohlsearch<CR>

"find usages
nnoremap <leader>sP :action FindUsages<CR>
#+end_src

** IDE

#+begin_src vimrc :tangle ~/.ideavimrc
"show settings
nnoremap <leader>is :action ShowSettings<CR>

"show key bindings
nnoremap <leader>ik :map<CR>

"open main menu
nnoremap <leader>imm :action MainMenu<CR>

"open main toolbar
nnoremap <leader>imt :action MainToolBar<CR>
#+end_src

*** Menu

#+begin_src vimrc :tangle ~/.ideavimrc
"view menu
nnoremap <leader>imv :action ViewMenu<CR>

"tools menu
nnoremap <leader>imt :action ToolsMenu<CR>
#+end_src

** Windows

#+begin_src vimrc :tangle ~/.ideavimrc
"close window
nnoremap <leader>wc :action CloseAllEditors<CR>

"split window below and focus
nnoremap <leader>ws <C-w>s<C-w>j

"split window right and focus
nnoremap <leader>wv <C-w>v<C-w>l

"focus window left
nnoremap <leader>wh <C-w>h

"focus window down
nnoremap <leader>wj <C-w>j

"focus window up
nnoremap <leader>wk <C-w>k

"focus window right
nnoremap <leader>wl <C-w>l
#+end_src

** Quit

#+begin_src vimrc :tangle ~/.ideavimrc
"restart
nnoremap <leader>qr :action RestartIde<CR>
#+end_src

* Git
** gitconfig

#+begin_src conf :tangle ~/.gitconfig
[user]
	email = bakmenson@gmail.com
	name = bakmenson
[core]
	excludesfile = /home/solus/.gitignore_global
[credential]
	helper = cache
#+end_src

** gitignore_global

#+begin_src conf :tangle ~/.gitignore_global
# Default
.gulp
.vscode
.idea
.uuid
.netrwhist
*.bak
accels.scm
vifminfo
vifminfo.json
tags

# Node
node_modules

# Dist & test
test
dist

# BD, logs
*.log
*.sql
*.sqlite
*.sqlite3

# Other
npm-debug.log*
yarn-debug.log*
yarn-error.log*
yarn.lock

# Special
Thumbs.db
Desktop.ini
ehthumbs.db
Icon?

### Python ###
__pycache__
.python-version
.mypy_cache
.vim
venv
*.lock

# Django
migrations

# MPV
watch_later

# qutebrowser
qsettings
#+end_src

* xinitrc

#+begin_src conf :tangle ~/.xinitrc
# You may need to comment out the next line to disable access control.
#xhost +SI:localuser:$USER

# Set themes, etc.
gnome-settings-daemon &

# Set fallback cursor.
xsetroot -cursor_name left_ptr

# Set keyboard repeat rate.
xset r rate 200 60

# If Emacs is started in server mode, `emacsclient` is a convenient way to
# edit files in place (used by e.g. `git commit`).
export VISUAL=emacsclient
export EDITOR="$VISUAL"
export _JAVA_AWT_WM_NONREPARENTING=1

# Finally launch emacs.
# exec dbus-launch --exit-with-session emacs -mm

# exec sxhkd &
# exec bspwm
# exec qtile start
#+end_src

* Dunst

#+begin_src conf :tangle ~/.config/dunst/dunstrc
[global]
    ### Display ###

    # Which monitor should the notifications be displayed on.
    monitor = 0

    # Display notification on focused monitor.  Possible modes are:
    #   mouse: follow mouse pointer
    #   keyboard: follow window with keyboard focus
    #   none: don't follow anything
    #
    # "keyboard" needs a window manager that exports the
    # _NET_ACTIVE_WINDOW property.
    # This should be the case for almost all modern window managers.
    #
    # If this option is set to mouse or keyboard, the monitor option
    # will be ignored.
    follow = none

    ### Geometry ###

    # dynamic width from 0 to 300
    width = (0, 600)
    # constant width of 300
    # width = 300

    # The maximum height of a single notification, excluding the frame.
    # height = 50
    height = (0, 300)

    # Position the notification in the top right corner
    origin = top-right

    # Offset from the origin
    offset = 10x50

    # Scale factor. It is auto-detected if value is 0.
    scale = 0

    # Maximum number of notification (0 means no limit)
    notification_limit = 0

    ### Progress bar ###

    # Turn on the progess bar. It appears when a progress hint is passed with
    # for example dunstify -h int:value:12
    progress_bar = true

    # Set the progress bar height. This includes the frame, so make sure
    # it's at least twice as big as the frame width.
    progress_bar_height = 10

    # Set the frame width of the progress bar
    progress_bar_frame_width = 1

    # Set the minimum width for the progress bar
    progress_bar_min_width = 150

    # Set the maximum width for the progress bar
    progress_bar_max_width = 300


    # Show how many messages are currently hidden (because of
    # notification_limit).
    indicate_hidden = yes

    # The transparency of the window.  Range: [0; 100].
    # This option will only work if a compositing window manager is
    # present (e.g. xcompmgr, compiz, etc.). (X11 only)
    transparency = 10

    # Draw a line of "separator_height" pixel height between two
    # notifications.
    # Set to 0 to disable.
    # If gap_size is greater than 0, this setting will be ignored.
    separator_height = 1

    # Padding between text and separator.
    padding = 8

    # Horizontal padding.
    horizontal_padding = 8

    # Padding between text and icon.
    text_icon_padding = 0

    # Defines width in pixels of frame around the notification window.
    # Set to 0 to disable.
    frame_width = 2

    # Defines color of the frame around the notification window.
    frame_color = "#89AAEB"

    # Size of gap to display between notifications - requires a compositor.
    # If value is greater than 0, separator_height will be ignored and a border
    # of size frame_width will be drawn around each notification instead.
    # Click events on gaps do not currently propagate to applications below.
    gap_size = 0

    # Define a color for the separator.
    # possible values are:
    #  * auto: dunst tries to find a color fitting to the background;
    #  * foreground: use the same color as the foreground;
    #  * frame: use the same color as the frame;
    #  * anything else will be interpreted as a X color.
    separator_color = frame

    # Sort messages by urgency.
    sort = yes

    # Don't remove messages, if the user is idle (no mouse or keyboard input)
    # for longer than idle_threshold seconds.
    # Set to 0 to disable.
    # A client can set the 'transient' hint to bypass this. See the rules
    # section for how to disable this if necessary
    idle_threshold = 120

    ### Text ###

    font = Jetbrains-Mono 12

    # The spacing between lines.  If the height is smaller than the
    # font height, it will get raised to the font height.
    line_height = 0

    # Possible values are:
    # full: Allow a small subset of html markup in notifications:
    #        <b>bold</b>
    #        <i>italic</i>
    #        <s>strikethrough</s>
    #        <u>underline</u>
    #
    #        For a complete reference see
    #        <https://docs.gtk.org/Pango/pango_markup.html>.
    #
    # strip: This setting is provided for compatibility with some broken
    #        clients that send markup even though it's not enabled on the
    #        server. Dunst will try to strip the markup but the parsing is
    #        simplistic so using this option outside of matching rules for
    #        specific applications *IS GREATLY DISCOURAGED*.
    #
    # no:    Disable markup parsing, incoming notifications will be treated as
    #        plain text. Dunst will not advertise that it has the body-markup
    #        capability if this is set as a global setting.
    #
    # It's important to note that markup inside the format option will be parsed
    # regardless of what this is set to.
    markup = full

    # The format of the message.  Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    #   %%  Literal %
    # Markup is allowed
    format = "<b>%s</b>\n%b"

    # Alignment of message text.
    # Possible values are "left", "center" and "right".
    alignment = left

    # Vertical alignment of message text and icon.
    # Possible values are "top", "center" and "bottom".
    vertical_alignment = center

    # Show age of message if message is older than show_age_threshold
    # seconds.
    # Set to -1 to disable.
    show_age_threshold = 60

    # Specify where to make an ellipsis in long lines.
    # Possible values are "start", "middle" and "end".
    ellipsize = middle

    # Ignore newlines '\n' in notifications.
    ignore_newline = no

    # Stack together notifications with the same content
    stack_duplicates = true

    # Hide the count of stacked notifications with the same content
    hide_duplicate_count = false

    # Display indicators for URLs (U) and actions (A).
    show_indicators = yes

    ### Icons ###

    # Recursive icon lookup. You can set a single theme, instead of having to
    # define all lookup paths.
    enable_recursive_icon_lookup = true

    # Set icon theme (only used for recursive icon lookup)
    icon_theme = Adwaita
    # You can also set multiple icon themes, with the leftmost one being used first.
    # icon_theme = "Adwaita, breeze"

    # Align icons left/right/top/off
    icon_position = left

    # Scale small icons up to this size, set to 0 to disable. Helpful
    # for e.g. small files or high-dpi screens. In case of conflict,
    # max_icon_size takes precedence over this.
    min_icon_size = 32

    # Scale larger icons down to this size, set to 0 to disable
    max_icon_size = 88

    # Paths to default icons (only neccesary when not using recursive icon lookup)
    # icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/
    icon_path = /usr/share/icons/Adwaita/96x96/status:/usr/share/icons/Adwaita/96x96/emblems

    ### History ###

    # Should a notification popped up from history be sticky or timeout
    # as if it would normally do.
    sticky_history = yes

    # Maximum amount of notifications kept in history
    history_length = 20

    ### Misc/Advanced ###

    # dmenu path.
    dmenu = /usr/bin/dmenu -p dunst:

    # Browser for opening urls in context menu.
    # browser = /usr/bin/xdg-open
    browser = firefox

    # Always run rule-defined scripts, even if the notification is suppressed
    always_run_script = true

    # Define the title of the windows spawned by dunst
    title = Dunst

    # Define the class of the windows spawned by dunst
    class = Dunst

    # Define the corner radius of the notification window
    # in pixel size. If the radius is 0, you have no rounded
    # corners.
    # The radius will be automatically lowered if it exceeds half of the
    # notification height to avoid clipping text and/or icons.
    corner_radius = 5

    # Ignore the dbus closeNotification message.
    # Useful to enforce the timeout set by dunst configuration. Without this
    # parameter, an application may close the notification sent before the
    # user defined timeout.
    ignore_dbusclose = false

    ### Wayland ###
    # These settings are Wayland-specific. They have no effect when using X11

    # Uncomment this if you want to let notications appear under fullscreen
    # applications (default: overlay)
    # layer = top

    # Set this to true to use X11 output on Wayland.
    force_xwayland = false

    ### Legacy

    # Use the Xinerama extension instead of RandR for multi-monitor support.
    # This setting is provided for compatibility with older nVidia drivers that
    # do not support RandR and using it on systems that support RandR is highly
    # discouraged.
    #
    # By enabling this setting dunst will not be able to detect when a monitor
    # is connected or disconnected which might break follow mode if the screen
    # layout changes.
    force_xinerama = false

    ### mouse

    # Defines list of actions for each mouse event
    # Possible values are:
    # * none: Don't do anything.
    # * do_action: Invoke the action determined by the action_name rule. If there is no
    #              such action, open the context menu.
    # * open_url: If the notification has exactly one url, open it. If there are multiple
    #             ones, open the context menu.
    # * close_current: Close current notification.
    # * close_all: Close all notifications.
    # * context: Open context menu for the notification.
    # * context_all: Open context menu for all notifications.
    # These values can be strung together for each mouse event, and
    # will be executed in sequence.
    mouse_left_click = close_current
    mouse_middle_click = do_action, close_current
    mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
    # Calculate the dpi to use on a per-monitor basis.
    # If this setting is enabled the Xft.dpi value will be ignored and instead
    # dunst will attempt to calculate an appropriate dpi value for each monitor
    # using the resolution and physical size. This might be useful in setups
    # where there are multiple screens with very different dpi values.
    per_monitor_dpi = false


[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    background = "#222222"
    foreground = "#888888"
    timeout = 10
    # Icon for notifications with low urgency, uncomment to enable
    #default_icon = /path/to/icon

[urgency_normal]
    background = "#1c1f26"
    foreground = "#ffffff"
    timeout = 10
    # Icon for notifications with normal urgency, uncomment to enable
    #default_icon = /path/to/icon

[urgency_critical]
    background = "#900000"
    foreground = "#ffffff"
    frame_color = "#ff0000"
    timeout = 0
    # Icon for notifications with critical urgency, uncomment to enable
    #default_icon = /path/to/icon

#+end_src

* Firefox

- =Enable userChrome.css=
1. about:config
2. type or paste userprof
3. double-click the toolkit.legacyUserProfileCustomizations.stylesheets preference to set true

- =userChrome.css=
1. about:support
2. :tangle <Profile Directory>/chrome/userChrome.css

- =Container Tabs Sidebar=
  add css style: header { display: none; }

#+begin_src css :tangle no
/* hides the native tabs */
#TabsToolbar { visibility: collapse; }

#sidebar-header { display: none; }

/* hide url bar
#nav-bar { visibility: collapse; } */

/* leaves space for the window buttons */
#nav-bar { margin-top: -1px; }
#+end_src

* Scripts
** before sleep

#+begin_src shell :tangle ~/.before_sleep.sh
#!/bin/sh

sleep_time_min=$1
sleep_time_seconds=$((sleep_time_min * 60))

if [[ $(pamac checkupdates -q | wc -l) -gt 0 ]]
then
    # TODO: add processing if Y/n selected n
    sudo pacman -Syu \
        && echo "Packages updates! I will sleep" $sleep_time_min "min before shutdown." \
        && sleep $sleep_time_seconds \
        && shutdown now
else
    echo "There are no updates. I will sleep" $sleep_time_min "min before suspend." \
        && sleep $sleep_time_seconds \
        && killall mpv \
        && systemctl suspend
fi
#+end_src

** squats

#+begin_src python :tangle ~/.squats.py
from time import sleep
from subprocess import run

for i in range(1, 11):
    sleep(3600)
    run(["notify-send", f"Do Squats!!! {i}th set."])
#+end_src
